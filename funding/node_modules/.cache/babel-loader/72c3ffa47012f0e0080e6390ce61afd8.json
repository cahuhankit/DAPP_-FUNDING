{"ast":null,"code":"import { unsafeUniformArrayIntDistribution, unsafeUniformBigIntDistribution, unsafeUniformIntDistribution } from 'pure-rand';\nexport class Random {\n  constructor(sourceRng) {\n    this.internalRng = sourceRng.clone();\n  }\n  clone() {\n    return new Random(this.internalRng);\n  }\n  next(bits) {\n    return unsafeUniformIntDistribution(0, (1 << bits) - 1, this.internalRng);\n  }\n  nextBoolean() {\n    return unsafeUniformIntDistribution(0, 1, this.internalRng) == 1;\n  }\n  nextInt(min, max) {\n    return unsafeUniformIntDistribution(min == null ? Random.MIN_INT : min, max == null ? Random.MAX_INT : max, this.internalRng);\n  }\n  nextBigInt(min, max) {\n    return unsafeUniformBigIntDistribution(min, max, this.internalRng);\n  }\n  nextArrayInt(min, max) {\n    return unsafeUniformArrayIntDistribution(min, max, this.internalRng);\n  }\n  nextDouble() {\n    const a = this.next(26);\n    const b = this.next(27);\n    return (a * Random.DBL_FACTOR + b) * Random.DBL_DIVISOR;\n  }\n}\nRandom.MIN_INT = 0x80000000 | 0;\nRandom.MAX_INT = 0x7fffffff | 0;\nRandom.DBL_FACTOR = Math.pow(2, 27);\nRandom.DBL_DIVISOR = Math.pow(2, -53);","map":{"version":3,"names":["unsafeUniformArrayIntDistribution","unsafeUniformBigIntDistribution","unsafeUniformIntDistribution","Random","constructor","sourceRng","internalRng","clone","next","bits","nextBoolean","nextInt","min","max","MIN_INT","MAX_INT","nextBigInt","nextArrayInt","nextDouble","a","b","DBL_FACTOR","DBL_DIVISOR","Math","pow"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/random/generator/Random.js"],"sourcesContent":["import { unsafeUniformArrayIntDistribution, unsafeUniformBigIntDistribution, unsafeUniformIntDistribution, } from 'pure-rand';\nexport class Random {\n    constructor(sourceRng) {\n        this.internalRng = sourceRng.clone();\n    }\n    clone() {\n        return new Random(this.internalRng);\n    }\n    next(bits) {\n        return unsafeUniformIntDistribution(0, (1 << bits) - 1, this.internalRng);\n    }\n    nextBoolean() {\n        return unsafeUniformIntDistribution(0, 1, this.internalRng) == 1;\n    }\n    nextInt(min, max) {\n        return unsafeUniformIntDistribution(min == null ? Random.MIN_INT : min, max == null ? Random.MAX_INT : max, this.internalRng);\n    }\n    nextBigInt(min, max) {\n        return unsafeUniformBigIntDistribution(min, max, this.internalRng);\n    }\n    nextArrayInt(min, max) {\n        return unsafeUniformArrayIntDistribution(min, max, this.internalRng);\n    }\n    nextDouble() {\n        const a = this.next(26);\n        const b = this.next(27);\n        return (a * Random.DBL_FACTOR + b) * Random.DBL_DIVISOR;\n    }\n}\nRandom.MIN_INT = 0x80000000 | 0;\nRandom.MAX_INT = 0x7fffffff | 0;\nRandom.DBL_FACTOR = Math.pow(2, 27);\nRandom.DBL_DIVISOR = Math.pow(2, -53);\n"],"mappings":"AAAA,SAASA,iCAAiC,EAAEC,+BAA+B,EAAEC,4BAA4B,QAAS,WAAW;AAC7H,OAAO,MAAMC,MAAM,CAAC;EAChBC,WAAW,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,WAAW,GAAGD,SAAS,CAACE,KAAK,EAAE;EACxC;EACAA,KAAK,GAAG;IACJ,OAAO,IAAIJ,MAAM,CAAC,IAAI,CAACG,WAAW,CAAC;EACvC;EACAE,IAAI,CAACC,IAAI,EAAE;IACP,OAAOP,4BAA4B,CAAC,CAAC,EAAE,CAAC,CAAC,IAAIO,IAAI,IAAI,CAAC,EAAE,IAAI,CAACH,WAAW,CAAC;EAC7E;EACAI,WAAW,GAAG;IACV,OAAOR,4BAA4B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACI,WAAW,CAAC,IAAI,CAAC;EACpE;EACAK,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAE;IACd,OAAOX,4BAA4B,CAACU,GAAG,IAAI,IAAI,GAAGT,MAAM,CAACW,OAAO,GAAGF,GAAG,EAAEC,GAAG,IAAI,IAAI,GAAGV,MAAM,CAACY,OAAO,GAAGF,GAAG,EAAE,IAAI,CAACP,WAAW,CAAC;EACjI;EACAU,UAAU,CAACJ,GAAG,EAAEC,GAAG,EAAE;IACjB,OAAOZ,+BAA+B,CAACW,GAAG,EAAEC,GAAG,EAAE,IAAI,CAACP,WAAW,CAAC;EACtE;EACAW,YAAY,CAACL,GAAG,EAAEC,GAAG,EAAE;IACnB,OAAOb,iCAAiC,CAACY,GAAG,EAAEC,GAAG,EAAE,IAAI,CAACP,WAAW,CAAC;EACxE;EACAY,UAAU,GAAG;IACT,MAAMC,CAAC,GAAG,IAAI,CAACX,IAAI,CAAC,EAAE,CAAC;IACvB,MAAMY,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC,EAAE,CAAC;IACvB,OAAO,CAACW,CAAC,GAAGhB,MAAM,CAACkB,UAAU,GAAGD,CAAC,IAAIjB,MAAM,CAACmB,WAAW;EAC3D;AACJ;AACAnB,MAAM,CAACW,OAAO,GAAG,UAAU,GAAG,CAAC;AAC/BX,MAAM,CAACY,OAAO,GAAG,UAAU,GAAG,CAAC;AAC/BZ,MAAM,CAACkB,UAAU,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACnCrB,MAAM,CAACmB,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"module"}