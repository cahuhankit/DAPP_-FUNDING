{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BadResponseTypeError = exports.TypeMismatchError = exports.NoUniqueBestOverloadError = exports.NoOverloadsMatchedError = void 0;\nconst Format = __importStar(require(\"../format\"));\n/**\n * This error indicates that no overloads matched when performing\n * overload resolution.  If there was only one plausible match,\n * a [[TypeMismatchError]] will be thrown instead.\n * @category Errors\n */\nclass NoOverloadsMatchedError extends Error {\n  constructor(methods, inputs, userDefinedTypes) {\n    const message = \"Arguments provided did not match any overload\";\n    super(message);\n    this.methods = methods;\n    this.inputs = inputs;\n    this.userDefinedTypes = userDefinedTypes;\n    this.name = \"NoOverloadsMatchedError\";\n  }\n}\nexports.NoOverloadsMatchedError = NoOverloadsMatchedError;\n/**\n * This error indicates that multiple overloads matched during\n * overload resolution, but none of them was the unique best\n * overload.\n * @category Errors\n */\nclass NoUniqueBestOverloadError extends Error {\n  constructor(resolutions) {\n    const message = \"Could not determine a unique best overload for the given arguments.  \" + \"Please specify the overload explicitly or give the arguments more explicit types.\";\n    super(message);\n    this.resolutions = resolutions;\n    this.name = \"NoUniqueBestOverloadError\";\n  }\n}\nexports.NoUniqueBestOverloadError = NoUniqueBestOverloadError;\n/**\n * This error indicates that the given input could not be recognized as the\n * type it was supposed to be.\n * @category Errors\n */\nclass TypeMismatchError extends Error {\n  constructor(dataType, input, variableName, specificity, reason) {\n    const message = `Could not interpret input for ${variableName} as type ${Format.Types.typeString(dataType)}.  Reason: ${reason}`;\n    super(message);\n    this.variableName = variableName;\n    this.dataType = dataType;\n    this.input = input;\n    this.reason = reason;\n    this.specificity = specificity;\n    this.name = \"TypeMismatchError\";\n  }\n}\nexports.TypeMismatchError = TypeMismatchError;\nclass BadResponseTypeError extends Error {\n  constructor(request, response) {\n    const message = `Got response type ${response.kind} to request type ${request.kind}`;\n    super(message);\n    this.request = request;\n    this.response = response;\n    this.name = \"BadResponseTypeError\";\n  }\n}\nexports.BadResponseTypeError = BadResponseTypeError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;;;;;;AAMA,MAAaA,uBAAwB,SAAQC,KAAK;EAIhDC,YACEC,OAAiB,EACjBC,MAAa,EACbC,gBAAwC;IAExC,MAAMC,OAAO,GAAG,+CAA+C;IAC/D,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACE,IAAI,GAAG,yBAAyB;EACvC;;AAfFC;AAkBA;;;;;;AAMA,MAAaC,yBAA0B,SAAQR,KAAK;EAElDC,YAAYQ,WAAyB;IACnC,MAAMJ,OAAO,GACX,uEAAuE,GACvE,mFAAmF;IACrF,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACI,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACH,IAAI,GAAG,2BAA2B;EACzC;;AATFC;AAYA;;;;;AAKA,MAAaG,iBAAkB,SAAQV,KAAK;EAyB1CC,YACEU,QAA2B,EAC3BC,KAAU,EACVC,YAAoB,EACpBC,WAAmB,EACnBC,MAAc;IAEd,MAAMV,OAAO,GAAG,iCAAiCQ,YAAY,YAAYG,MAAM,CAACC,KAAK,CAACC,UAAU,CAC9FP,QAAQ,CACT,cAAcI,MAAM,EAAE;IACvB,KAAK,CAACV,OAAO,CAAC;IACd,IAAI,CAACQ,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACG,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACR,IAAI,GAAG,mBAAmB;EACjC;;AA1CFC;AA6CA,MAAaY,oBAAqB,SAAQnB,KAAK;EAI7CC,YAAYmB,OAAoB,EAAEC,QAAsB;IACtD,MAAMhB,OAAO,GAAG,qBAAqBgB,QAAQ,CAACC,IAAI,oBAAoBF,OAAO,CAACE,IAAI,EAAE;IACpF,KAAK,CAACjB,OAAO,CAAC;IACd,IAAI,CAACe,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACf,IAAI,GAAG,sBAAsB;EACpC;;AAVFC","names":["NoOverloadsMatchedError","Error","constructor","methods","inputs","userDefinedTypes","message","name","exports","NoUniqueBestOverloadError","resolutions","TypeMismatchError","dataType","input","variableName","specificity","reason","Format","Types","typeString","BadResponseTypeError","request","response","kind"],"sourceRoot":"","sources":["../../../lib/wrap/errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}