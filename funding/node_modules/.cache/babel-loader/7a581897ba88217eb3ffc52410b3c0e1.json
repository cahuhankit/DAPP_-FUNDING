{"ast":null,"code":"export function buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue) {\n  return function valuesAndSeparateKeysToObjectMapper(gs) {\n    const obj = {};\n    for (let idx = 0; idx !== keys.length; ++idx) {\n      const valueWrapper = gs[idx];\n      if (valueWrapper !== noKeyValue) {\n        Object.defineProperty(obj, keys[idx], {\n          value: valueWrapper,\n          configurable: true,\n          enumerable: true,\n          writable: true\n        });\n      }\n    }\n    return obj;\n  };\n}\nexport function buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue) {\n  return function valuesAndSeparateKeysToObjectUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n      throw new Error('Incompatible instance received: should be a non-null object');\n    }\n    if (!('constructor' in value) || value.constructor !== Object) {\n      throw new Error('Incompatible instance received: should be of exact type Object');\n    }\n    let extractedPropertiesCount = 0;\n    const extractedValues = [];\n    for (let idx = 0; idx !== keys.length; ++idx) {\n      const descriptor = Object.getOwnPropertyDescriptor(value, keys[idx]);\n      if (descriptor !== undefined) {\n        if (!descriptor.configurable || !descriptor.enumerable || !descriptor.writable) {\n          throw new Error('Incompatible instance received: should contain only c/e/w properties');\n        }\n        if (descriptor.get !== undefined || descriptor.set !== undefined) {\n          throw new Error('Incompatible instance received: should contain only no get/set properties');\n        }\n        ++extractedPropertiesCount;\n        extractedValues.push(descriptor.value);\n      } else {\n        extractedValues.push(noKeyValue);\n      }\n    }\n    const namePropertiesCount = Object.getOwnPropertyNames(value).length;\n    const symbolPropertiesCount = Object.getOwnPropertySymbols(value).length;\n    if (extractedPropertiesCount !== namePropertiesCount + symbolPropertiesCount) {\n      throw new Error('Incompatible instance received: should not contain extra properties');\n    }\n    return extractedValues;\n  };\n}","map":{"version":3,"names":["buildValuesAndSeparateKeysToObjectMapper","keys","noKeyValue","valuesAndSeparateKeysToObjectMapper","gs","obj","idx","length","valueWrapper","Object","defineProperty","value","configurable","enumerable","writable","buildValuesAndSeparateKeysToObjectUnmapper","valuesAndSeparateKeysToObjectUnmapper","Error","constructor","extractedPropertiesCount","extractedValues","descriptor","getOwnPropertyDescriptor","undefined","get","set","push","namePropertiesCount","getOwnPropertyNames","symbolPropertiesCount","getOwnPropertySymbols"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/ValuesAndSeparateKeysToObject.js"],"sourcesContent":["export function buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectMapper(gs) {\n        const obj = {};\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const valueWrapper = gs[idx];\n            if (valueWrapper !== noKeyValue) {\n                Object.defineProperty(obj, keys[idx], {\n                    value: valueWrapper,\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                });\n            }\n        }\n        return obj;\n    };\n}\nexport function buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectUnmapper(value) {\n        if (typeof value !== 'object' || value === null) {\n            throw new Error('Incompatible instance received: should be a non-null object');\n        }\n        if (!('constructor' in value) || value.constructor !== Object) {\n            throw new Error('Incompatible instance received: should be of exact type Object');\n        }\n        let extractedPropertiesCount = 0;\n        const extractedValues = [];\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const descriptor = Object.getOwnPropertyDescriptor(value, keys[idx]);\n            if (descriptor !== undefined) {\n                if (!descriptor.configurable || !descriptor.enumerable || !descriptor.writable) {\n                    throw new Error('Incompatible instance received: should contain only c/e/w properties');\n                }\n                if (descriptor.get !== undefined || descriptor.set !== undefined) {\n                    throw new Error('Incompatible instance received: should contain only no get/set properties');\n                }\n                ++extractedPropertiesCount;\n                extractedValues.push(descriptor.value);\n            }\n            else {\n                extractedValues.push(noKeyValue);\n            }\n        }\n        const namePropertiesCount = Object.getOwnPropertyNames(value).length;\n        const symbolPropertiesCount = Object.getOwnPropertySymbols(value).length;\n        if (extractedPropertiesCount !== namePropertiesCount + symbolPropertiesCount) {\n            throw new Error('Incompatible instance received: should not contain extra properties');\n        }\n        return extractedValues;\n    };\n}\n"],"mappings":"AAAA,OAAO,SAASA,wCAAwC,CAACC,IAAI,EAAEC,UAAU,EAAE;EACvE,OAAO,SAASC,mCAAmC,CAACC,EAAE,EAAE;IACpD,MAAMC,GAAG,GAAG,CAAC,CAAC;IACd,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAKL,IAAI,CAACM,MAAM,EAAE,EAAED,GAAG,EAAE;MAC1C,MAAME,YAAY,GAAGJ,EAAE,CAACE,GAAG,CAAC;MAC5B,IAAIE,YAAY,KAAKN,UAAU,EAAE;QAC7BO,MAAM,CAACC,cAAc,CAACL,GAAG,EAAEJ,IAAI,CAACK,GAAG,CAAC,EAAE;UAClCK,KAAK,EAAEH,YAAY;UACnBI,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE;QACd,CAAC,CAAC;MACN;IACJ;IACA,OAAOT,GAAG;EACd,CAAC;AACL;AACA,OAAO,SAASU,0CAA0C,CAACd,IAAI,EAAEC,UAAU,EAAE;EACzE,OAAO,SAASc,qCAAqC,CAACL,KAAK,EAAE;IACzD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;MAC7C,MAAM,IAAIM,KAAK,CAAC,6DAA6D,CAAC;IAClF;IACA,IAAI,EAAE,aAAa,IAAIN,KAAK,CAAC,IAAIA,KAAK,CAACO,WAAW,KAAKT,MAAM,EAAE;MAC3D,MAAM,IAAIQ,KAAK,CAAC,gEAAgE,CAAC;IACrF;IACA,IAAIE,wBAAwB,GAAG,CAAC;IAChC,MAAMC,eAAe,GAAG,EAAE;IAC1B,KAAK,IAAId,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAKL,IAAI,CAACM,MAAM,EAAE,EAAED,GAAG,EAAE;MAC1C,MAAMe,UAAU,GAAGZ,MAAM,CAACa,wBAAwB,CAACX,KAAK,EAAEV,IAAI,CAACK,GAAG,CAAC,CAAC;MACpE,IAAIe,UAAU,KAAKE,SAAS,EAAE;QAC1B,IAAI,CAACF,UAAU,CAACT,YAAY,IAAI,CAACS,UAAU,CAACR,UAAU,IAAI,CAACQ,UAAU,CAACP,QAAQ,EAAE;UAC5E,MAAM,IAAIG,KAAK,CAAC,sEAAsE,CAAC;QAC3F;QACA,IAAII,UAAU,CAACG,GAAG,KAAKD,SAAS,IAAIF,UAAU,CAACI,GAAG,KAAKF,SAAS,EAAE;UAC9D,MAAM,IAAIN,KAAK,CAAC,2EAA2E,CAAC;QAChG;QACA,EAAEE,wBAAwB;QAC1BC,eAAe,CAACM,IAAI,CAACL,UAAU,CAACV,KAAK,CAAC;MAC1C,CAAC,MACI;QACDS,eAAe,CAACM,IAAI,CAACxB,UAAU,CAAC;MACpC;IACJ;IACA,MAAMyB,mBAAmB,GAAGlB,MAAM,CAACmB,mBAAmB,CAACjB,KAAK,CAAC,CAACJ,MAAM;IACpE,MAAMsB,qBAAqB,GAAGpB,MAAM,CAACqB,qBAAqB,CAACnB,KAAK,CAAC,CAACJ,MAAM;IACxE,IAAIY,wBAAwB,KAAKQ,mBAAmB,GAAGE,qBAAqB,EAAE;MAC1E,MAAM,IAAIZ,KAAK,CAAC,qEAAqE,CAAC;IAC1F;IACA,OAAOG,eAAe;EAC1B,CAAC;AACL"},"metadata":{},"sourceType":"module"}