{"ast":null,"code":"import { nat } from './nat.js';\nimport { indexToMappedConstantMapperFor, indexToMappedConstantUnmapperFor } from './_internals/mappers/IndexToMappedConstant.js';\nfunction computeNumChoices(options) {\n  if (options.length === 0) throw new Error(`fc.mapToConstant expects at least one option`);\n  let numChoices = 0;\n  for (let idx = 0; idx !== options.length; ++idx) {\n    if (options[idx].num < 0) throw new Error(`fc.mapToConstant expects all options to have a number of entries greater or equal to zero`);\n    numChoices += options[idx].num;\n  }\n  if (numChoices === 0) throw new Error(`fc.mapToConstant expects at least one choice among options`);\n  return numChoices;\n}\nexport function mapToConstant() {\n  for (var _len = arguments.length, entries = new Array(_len), _key = 0; _key < _len; _key++) {\n    entries[_key] = arguments[_key];\n  }\n  const numChoices = computeNumChoices(entries);\n  return nat({\n    max: numChoices - 1\n  }).map(indexToMappedConstantMapperFor(entries), indexToMappedConstantUnmapperFor(entries));\n}","map":{"version":3,"names":["nat","indexToMappedConstantMapperFor","indexToMappedConstantUnmapperFor","computeNumChoices","options","length","Error","numChoices","idx","num","mapToConstant","entries","max","map"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/mapToConstant.js"],"sourcesContent":["import { nat } from './nat.js';\nimport { indexToMappedConstantMapperFor, indexToMappedConstantUnmapperFor, } from './_internals/mappers/IndexToMappedConstant.js';\nfunction computeNumChoices(options) {\n    if (options.length === 0)\n        throw new Error(`fc.mapToConstant expects at least one option`);\n    let numChoices = 0;\n    for (let idx = 0; idx !== options.length; ++idx) {\n        if (options[idx].num < 0)\n            throw new Error(`fc.mapToConstant expects all options to have a number of entries greater or equal to zero`);\n        numChoices += options[idx].num;\n    }\n    if (numChoices === 0)\n        throw new Error(`fc.mapToConstant expects at least one choice among options`);\n    return numChoices;\n}\nexport function mapToConstant(...entries) {\n    const numChoices = computeNumChoices(entries);\n    return nat({ max: numChoices - 1 }).map(indexToMappedConstantMapperFor(entries), indexToMappedConstantUnmapperFor(entries));\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,8BAA8B,EAAEC,gCAAgC,QAAS,+CAA+C;AACjI,SAASC,iBAAiB,CAACC,OAAO,EAAE;EAChC,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,EACpB,MAAM,IAAIC,KAAK,CAAE,8CAA6C,CAAC;EACnE,IAAIC,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAKJ,OAAO,CAACC,MAAM,EAAE,EAAEG,GAAG,EAAE;IAC7C,IAAIJ,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,GAAG,CAAC,EACpB,MAAM,IAAIH,KAAK,CAAE,2FAA0F,CAAC;IAChHC,UAAU,IAAIH,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG;EAClC;EACA,IAAIF,UAAU,KAAK,CAAC,EAChB,MAAM,IAAID,KAAK,CAAE,4DAA2D,CAAC;EACjF,OAAOC,UAAU;AACrB;AACA,OAAO,SAASG,aAAa,GAAa;EAAA,kCAATC,OAAO;IAAPA,OAAO;EAAA;EACpC,MAAMJ,UAAU,GAAGJ,iBAAiB,CAACQ,OAAO,CAAC;EAC7C,OAAOX,GAAG,CAAC;IAAEY,GAAG,EAAEL,UAAU,GAAG;EAAE,CAAC,CAAC,CAACM,GAAG,CAACZ,8BAA8B,CAACU,OAAO,CAAC,EAAET,gCAAgC,CAACS,OAAO,CAAC,CAAC;AAC/H"},"metadata":{},"sourceType":"module"}