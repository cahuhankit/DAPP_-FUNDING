{"ast":null,"code":"\"use strict\";\n\n/**\n * @protected\n *\n * @packageDocumentation\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readDefinition = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:ast:read\");\nconst Conversion = __importStar(require(\"../../conversion\"));\nconst Evm = __importStar(require(\"../../evm\"));\nconst Ast = __importStar(require(\"../../ast\"));\nconst errors_1 = require(\"../../errors\");\nfunction readDefinition(pointer) {\n  const definition = pointer.definition;\n  debug(\"definition %o\", definition);\n  switch (Ast.Utils.typeClass(definition)) {\n    case \"rational\":\n      let numericalValue = Ast.Utils.rationalValue(definition);\n      return Conversion.toBytes(numericalValue, Evm.Utils.WORD_SIZE);\n    //you may be wondering, why do we not just use definition.value here,\n    //like we do below? answer: because if this isn't a literal, that may not\n    //exist\n    case \"stringliteral\":\n      return Conversion.toBytes(definition.hexValue);\n    default:\n      //unfortunately, other types of constants are just too complicated to\n      //handle right now.  sorry.\n      debug(\"unsupported constant definition type\");\n      throw new errors_1.DecodingError({\n        kind: \"UnsupportedConstantError\",\n        definition\n      });\n  }\n}\nexports.readDefinition = readDefinition;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA,MAAMA,KAAK,GAAG,mBAAW,EAAC,gBAAgB,CAAC;AAE3C;AACA;AACA;AAGA;AAEA,SAAgBC,cAAc,CAC5BC,OAA0C;EAE1C,MAAMC,UAAU,GAAGD,OAAO,CAACC,UAAU;EACrCH,KAAK,CAAC,eAAe,EAAEG,UAAU,CAAC;EAElC,QAAQC,GAAG,CAACC,KAAK,CAACC,SAAS,CAACH,UAAU,CAAC;IACrC,KAAK,UAAU;MACb,IAAII,cAAc,GAAOH,GAAG,CAACC,KAAK,CAACG,aAAa,CAACL,UAAU,CAAC;MAC5D,OAAOM,UAAU,CAACC,OAAO,CAACH,cAAc,EAAEI,GAAG,CAACN,KAAK,CAACO,SAAS,CAAC;IAChE;IACA;IACA;IACA,KAAK,eAAe;MAClB,OAAOH,UAAU,CAACC,OAAO,CAACP,UAAU,CAACU,QAAQ,CAAC;IAChD;MACE;MACA;MACAb,KAAK,CAAC,sCAAsC,CAAC;MAC7C,MAAM,IAAIc,sBAAa,CAAC;QACtBC,IAAI,EAAE,0BAA0B;QAChCZ;OACD,CAAC;EAAC;AAET;AAxBAa","names":["debug","readDefinition","pointer","definition","Ast","Utils","typeClass","numericalValue","rationalValue","Conversion","toBytes","Evm","WORD_SIZE","hexValue","errors_1","kind","exports"],"sourceRoot":"","sources":["../../../../lib/ast-constant/read/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}