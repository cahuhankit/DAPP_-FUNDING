{"ast":null,"code":"import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { biasNumericRange, bigIntLogLike } from './helpers/BiasNumericRange.js';\nimport { shrinkBigInt } from './helpers/ShrinkBigInt.js';\nexport class BigIntArbitrary extends Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value(mrng.nextBigInt(range.min, range.max), undefined);\n  }\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n    const ranges = biasNumericRange(this.min, this.max, bigIntLogLike);\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n  canShrinkWithoutContext(value) {\n    return typeof value === 'bigint' && this.min <= value && value <= this.max;\n  }\n  shrink(current, context) {\n    if (!BigIntArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return shrinkBigInt(current, target, true);\n    }\n    if (this.isLastChanceTry(current, context)) {\n      return Stream.of(new Value(context, undefined));\n    }\n    return shrinkBigInt(current, context, false);\n  }\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return BigInt(0);\n    }\n    return this.min < 0 ? this.max : this.min;\n  }\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + BigInt(1) && current > this.min;\n    if (current < 0) return current === context - BigInt(1) && current < this.max;\n    return false;\n  }\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n    if (typeof context !== 'bigint') {\n      throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n    }\n    const differentSigns = current > 0 && context < 0 || current < 0 && context > 0;\n    if (context !== BigInt(0) && differentSigns) {\n      throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["Stream","Arbitrary","Value","biasNumericRange","bigIntLogLike","shrinkBigInt","BigIntArbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","nextBigInt","undefined","nextInt","ranges","length","id","canShrinkWithoutContext","value","shrink","current","context","isValidContext","target","defaultTarget","isLastChanceTry","of","BigInt","Error","differentSigns"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/BigIntArbitrary.js"],"sourcesContent":["import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { biasNumericRange, bigIntLogLike } from './helpers/BiasNumericRange.js';\nimport { shrinkBigInt } from './helpers/ShrinkBigInt.js';\nexport class BigIntArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextBigInt(range.min, range.max), undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, bigIntLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        return typeof value === 'bigint' && this.min <= value && value <= this.max;\n    }\n    shrink(current, context) {\n        if (!BigIntArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkBigInt(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkBigInt(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return BigInt(0);\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + BigInt(1) && current > this.min;\n        if (current < 0)\n            return current === context - BigInt(1) && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'bigint') {\n            throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n        }\n        const differentSigns = (current > 0 && context < 0) || (current < 0 && context > 0);\n        if (context !== BigInt(0) && differentSigns) {\n            throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}