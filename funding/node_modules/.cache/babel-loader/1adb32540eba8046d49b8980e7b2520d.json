{"ast":null,"code":"import { integer } from '../../integer.js';\nimport { WithShrinkFromOtherArbitrary } from '../WithShrinkFromOtherArbitrary.js';\nexport function restrictedIntegerArbitraryBuilder(min, maxGenerated, max) {\n  const generatorArbitrary = integer({\n    min,\n    max: maxGenerated\n  });\n  if (maxGenerated === max) {\n    return generatorArbitrary;\n  }\n  const shrinkerArbitrary = integer({\n    min,\n    max\n  });\n  return new WithShrinkFromOtherArbitrary(generatorArbitrary, shrinkerArbitrary);\n}","map":{"version":3,"names":["integer","WithShrinkFromOtherArbitrary","restrictedIntegerArbitraryBuilder","min","maxGenerated","max","generatorArbitrary","shrinkerArbitrary"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/RestrictedIntegerArbitraryBuilder.js"],"sourcesContent":["import { integer } from '../../integer.js';\nimport { WithShrinkFromOtherArbitrary } from '../WithShrinkFromOtherArbitrary.js';\nexport function restrictedIntegerArbitraryBuilder(min, maxGenerated, max) {\n    const generatorArbitrary = integer({ min, max: maxGenerated });\n    if (maxGenerated === max) {\n        return generatorArbitrary;\n    }\n    const shrinkerArbitrary = integer({ min, max });\n    return new WithShrinkFromOtherArbitrary(generatorArbitrary, shrinkerArbitrary);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,4BAA4B,QAAQ,oCAAoC;AACjF,OAAO,SAASC,iCAAiC,CAACC,GAAG,EAAEC,YAAY,EAAEC,GAAG,EAAE;EACtE,MAAMC,kBAAkB,GAAGN,OAAO,CAAC;IAAEG,GAAG;IAAEE,GAAG,EAAED;EAAa,CAAC,CAAC;EAC9D,IAAIA,YAAY,KAAKC,GAAG,EAAE;IACtB,OAAOC,kBAAkB;EAC7B;EACA,MAAMC,iBAAiB,GAAGP,OAAO,CAAC;IAAEG,GAAG;IAAEE;EAAI,CAAC,CAAC;EAC/C,OAAO,IAAIJ,4BAA4B,CAACK,kBAAkB,EAAEC,iBAAiB,CAAC;AAClF"},"metadata":{},"sourceType":"module"}