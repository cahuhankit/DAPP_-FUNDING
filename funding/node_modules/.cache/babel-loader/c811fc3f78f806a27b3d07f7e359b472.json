{"ast":null,"code":"export function integerLogLike(v) {\n  return Math.floor(Math.log(v) / Math.log(2));\n}\nexport function bigIntLogLike(v) {\n  if (v === BigInt(0)) return BigInt(0);\n  return BigInt(v.toString().length);\n}\nfunction biasNumericRange(min, max, logLike) {\n  if (min === max) {\n    return [{\n      min: min,\n      max: max\n    }];\n  }\n  if (min < 0 && max > 0) {\n    const logMin = logLike(-min);\n    const logMax = logLike(max);\n    return [{\n      min: -logMin,\n      max: logMax\n    }, {\n      min: max - logMax,\n      max: max\n    }, {\n      min: min,\n      max: min + logMin\n    }];\n  }\n  const logGap = logLike(max - min);\n  const arbCloseToMin = {\n    min: min,\n    max: min + logGap\n  };\n  const arbCloseToMax = {\n    min: max - logGap,\n    max: max\n  };\n  return min < 0 ? [arbCloseToMax, arbCloseToMin] : [arbCloseToMin, arbCloseToMax];\n}\nexport { biasNumericRange };","map":{"version":3,"names":["integerLogLike","v","Math","floor","log","bigIntLogLike","BigInt","toString","length","biasNumericRange","min","max","logLike","logMin","logMax","logGap","arbCloseToMin","arbCloseToMax"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/BiasNumericRange.js"],"sourcesContent":["export function integerLogLike(v) {\n    return Math.floor(Math.log(v) / Math.log(2));\n}\nexport function bigIntLogLike(v) {\n    if (v === BigInt(0))\n        return BigInt(0);\n    return BigInt(v.toString().length);\n}\nfunction biasNumericRange(min, max, logLike) {\n    if (min === max) {\n        return [{ min: min, max: max }];\n    }\n    if (min < 0 && max > 0) {\n        const logMin = logLike(-min);\n        const logMax = logLike(max);\n        return [\n            { min: -logMin, max: logMax },\n            { min: (max - logMax), max: max },\n            { min: min, max: min + logMin },\n        ];\n    }\n    const logGap = logLike((max - min));\n    const arbCloseToMin = { min: min, max: min + logGap };\n    const arbCloseToMax = { min: (max - logGap), max: max };\n    return min < 0\n        ? [arbCloseToMax, arbCloseToMin]\n        : [arbCloseToMin, arbCloseToMax];\n}\nexport { biasNumericRange };\n"],"mappings":"AAAA,OAAO,SAASA,cAAc,CAACC,CAAC,EAAE;EAC9B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACH,CAAC,CAAC,GAAGC,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;AAChD;AACA,OAAO,SAASC,aAAa,CAACJ,CAAC,EAAE;EAC7B,IAAIA,CAAC,KAAKK,MAAM,CAAC,CAAC,CAAC,EACf,OAAOA,MAAM,CAAC,CAAC,CAAC;EACpB,OAAOA,MAAM,CAACL,CAAC,CAACM,QAAQ,EAAE,CAACC,MAAM,CAAC;AACtC;AACA,SAASC,gBAAgB,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACzC,IAAIF,GAAG,KAAKC,GAAG,EAAE;IACb,OAAO,CAAC;MAAED,GAAG,EAAEA,GAAG;MAAEC,GAAG,EAAEA;IAAI,CAAC,CAAC;EACnC;EACA,IAAID,GAAG,GAAG,CAAC,IAAIC,GAAG,GAAG,CAAC,EAAE;IACpB,MAAME,MAAM,GAAGD,OAAO,CAAC,CAACF,GAAG,CAAC;IAC5B,MAAMI,MAAM,GAAGF,OAAO,CAACD,GAAG,CAAC;IAC3B,OAAO,CACH;MAAED,GAAG,EAAE,CAACG,MAAM;MAAEF,GAAG,EAAEG;IAAO,CAAC,EAC7B;MAAEJ,GAAG,EAAGC,GAAG,GAAGG,MAAO;MAAEH,GAAG,EAAEA;IAAI,CAAC,EACjC;MAAED,GAAG,EAAEA,GAAG;MAAEC,GAAG,EAAED,GAAG,GAAGG;IAAO,CAAC,CAClC;EACL;EACA,MAAME,MAAM,GAAGH,OAAO,CAAED,GAAG,GAAGD,GAAG,CAAE;EACnC,MAAMM,aAAa,GAAG;IAAEN,GAAG,EAAEA,GAAG;IAAEC,GAAG,EAAED,GAAG,GAAGK;EAAO,CAAC;EACrD,MAAME,aAAa,GAAG;IAAEP,GAAG,EAAGC,GAAG,GAAGI,MAAO;IAAEJ,GAAG,EAAEA;EAAI,CAAC;EACvD,OAAOD,GAAG,GAAG,CAAC,GACR,CAACO,aAAa,EAAED,aAAa,CAAC,GAC9B,CAACA,aAAa,EAAEC,aAAa,CAAC;AACxC;AACA,SAASR,gBAAgB"},"metadata":{},"sourceType":"module"}