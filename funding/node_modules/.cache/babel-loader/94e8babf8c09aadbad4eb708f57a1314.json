{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3InterfaceAdapter = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst shim_1 = require(\"../../shim\");\nclass Web3InterfaceAdapter {\n  constructor() {\n    let {\n      provider,\n      networkType\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.web3 = new shim_1.Web3Shim({\n      provider,\n      networkType\n    });\n  }\n  getNetworkId() {\n    return this.web3.eth.net.getId();\n  }\n  getBlock(block) {\n    return this.web3.eth.getBlock(block);\n  }\n  getTransaction(tx) {\n    return this.web3.eth.getTransaction(tx);\n  }\n  getTransactionReceipt(tx) {\n    return this.web3.eth.getTransactionReceipt(tx);\n  }\n  getBalance(address) {\n    return this.web3.eth.getBalance(address);\n  }\n  getCode(address) {\n    return this.web3.eth.getCode(address);\n  }\n  getAccounts() {\n    return this.web3.eth.getAccounts();\n  }\n  estimateGas(transactionConfig) {\n    let stacktrace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      // web3 does not error gracefully when gas estimation fails due to a revert,\n      // so in cases where we want to get past this (debugging/stacktracing), we must\n      // catch the error and return null instead\n      if (stacktrace === true) {\n        try {\n          const gasEstimate = yield this.web3.eth.estimateGas(transactionConfig);\n          return gasEstimate;\n        } catch (_a) {\n          return null;\n        }\n      } else {\n        return this.web3.eth.estimateGas(transactionConfig);\n      }\n    });\n  }\n  getBlockNumber() {\n    return this.web3.eth.getBlockNumber();\n  }\n  getTransactionCostReport(receipt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const tx = yield this.getTransaction(receipt.transactionHash);\n      const block = yield this.getBlock(receipt.blockNumber);\n      if (!block) return null;\n      const balance = yield this.getBalance(tx.from);\n      const gasPrice = new bn_js_1.default(tx.gasPrice);\n      const gas = new bn_js_1.default(receipt.gasUsed);\n      const value = new bn_js_1.default(tx.value);\n      const cost = gasPrice.mul(gas).add(value);\n      const timestamp = typeof block.timestamp === \"string\" ? parseInt(block.timestamp) : block.timestamp;\n      return {\n        timestamp,\n        from: tx.from,\n        balance: shim_1.Web3Shim.utils.fromWei(balance, \"ether\"),\n        gasUnit: \"gwei\",\n        gasPrice: shim_1.Web3Shim.utils.fromWei(gasPrice, \"gwei\"),\n        gas,\n        valueUnit: \"ETH\",\n        value: shim_1.Web3Shim.utils.fromWei(value, \"ether\"),\n        cost\n      };\n    });\n  }\n  displayCost(value) {\n    return shim_1.Web3Shim.utils.fromWei(value, \"ether\");\n  }\n}\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;","map":{"version":3,"mappings":"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","names":["Web3InterfaceAdapter","constructor","provider","networkType","web3","shim_1","getNetworkId","eth","net","getId","getBlock","block","getTransaction","tx","getTransactionReceipt","getBalance","address","getCode","getAccounts","estimateGas","transactionConfig","stacktrace","gasEstimate","getBlockNumber","getTransactionCostReport","receipt","transactionHash","blockNumber","balance","from","gasPrice","bn_js_1","gas","gasUsed","value","cost","mul","add","timestamp","parseInt","utils","fromWei","gasUnit","valueUnit","displayCost","exports"],"sourceRoot":"","sources":["../../../lib/adapter/web3/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}