{"ast":null,"code":"import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nexport class CloneArbitrary extends Arbitrary {\n  constructor(arb, numValues) {\n    super();\n    this.arb = arb;\n    this.numValues = numValues;\n  }\n  generate(mrng, biasFactor) {\n    const items = [];\n    if (this.numValues <= 0) {\n      return this.wrapper(items);\n    }\n    for (let idx = 0; idx !== this.numValues - 1; ++idx) {\n      items.push(this.arb.generate(mrng.clone(), biasFactor));\n    }\n    items.push(this.arb.generate(mrng, biasFactor));\n    return this.wrapper(items);\n  }\n  canShrinkWithoutContext(value) {\n    if (!Array.isArray(value) || value.length !== this.numValues) {\n      return false;\n    }\n    if (value.length === 0) {\n      return true;\n    }\n    for (let index = 1; index < value.length; ++index) {\n      if (!Object.is(value[0], value[index])) {\n        return false;\n      }\n    }\n    return this.arb.canShrinkWithoutContext(value[0]);\n  }\n  shrink(value, context) {\n    if (value.length === 0) {\n      return Stream.nil();\n    }\n    return new Stream(this.shrinkImpl(value, context !== undefined ? context : [])).map(v => this.wrapper(v));\n  }\n  *shrinkImpl(value, contexts) {\n    const its = value.map((v, idx) => this.arb.shrink(v, contexts[idx])[Symbol.iterator]());\n    let cur = its.map(it => it.next());\n    while (!cur[0].done) {\n      yield cur.map(c => c.value);\n      cur = its.map(it => it.next());\n    }\n  }\n  static makeItCloneable(vs, shrinkables) {\n    vs[cloneMethod] = () => {\n      const cloned = [];\n      for (let idx = 0; idx !== shrinkables.length; ++idx) {\n        cloned.push(shrinkables[idx].value);\n      }\n      this.makeItCloneable(cloned, shrinkables);\n      return cloned;\n    };\n    return vs;\n  }\n  wrapper(items) {\n    let cloneable = false;\n    const vs = [];\n    const contexts = [];\n    for (let idx = 0; idx !== items.length; ++idx) {\n      const s = items[idx];\n      cloneable = cloneable || s.hasToBeCloned;\n      vs.push(s.value);\n      contexts.push(s.context);\n    }\n    if (cloneable) {\n      CloneArbitrary.makeItCloneable(vs, items);\n    }\n    return new Value(vs, contexts);\n  }\n}","map":{"version":3,"names":["Arbitrary","Value","cloneMethod","Stream","CloneArbitrary","constructor","arb","numValues","generate","mrng","biasFactor","items","wrapper","idx","push","clone","canShrinkWithoutContext","value","Array","isArray","length","index","Object","is","shrink","context","nil","shrinkImpl","undefined","map","v","contexts","its","Symbol","iterator","cur","it","next","done","c","makeItCloneable","vs","shrinkables","cloned","cloneable","s","hasToBeCloned"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/CloneArbitrary.js"],"sourcesContent":["import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nexport class CloneArbitrary extends Arbitrary {\n    constructor(arb, numValues) {\n        super();\n        this.arb = arb;\n        this.numValues = numValues;\n    }\n    generate(mrng, biasFactor) {\n        const items = [];\n        if (this.numValues <= 0) {\n            return this.wrapper(items);\n        }\n        for (let idx = 0; idx !== this.numValues - 1; ++idx) {\n            items.push(this.arb.generate(mrng.clone(), biasFactor));\n        }\n        items.push(this.arb.generate(mrng, biasFactor));\n        return this.wrapper(items);\n    }\n    canShrinkWithoutContext(value) {\n        if (!Array.isArray(value) || value.length !== this.numValues) {\n            return false;\n        }\n        if (value.length === 0) {\n            return true;\n        }\n        for (let index = 1; index < value.length; ++index) {\n            if (!Object.is(value[0], value[index])) {\n                return false;\n            }\n        }\n        return this.arb.canShrinkWithoutContext(value[0]);\n    }\n    shrink(value, context) {\n        if (value.length === 0) {\n            return Stream.nil();\n        }\n        return new Stream(this.shrinkImpl(value, context !== undefined ? context : [])).map((v) => this.wrapper(v));\n    }\n    *shrinkImpl(value, contexts) {\n        const its = value.map((v, idx) => this.arb.shrink(v, contexts[idx])[Symbol.iterator]());\n        let cur = its.map((it) => it.next());\n        while (!cur[0].done) {\n            yield cur.map((c) => c.value);\n            cur = its.map((it) => it.next());\n        }\n    }\n    static makeItCloneable(vs, shrinkables) {\n        vs[cloneMethod] = () => {\n            const cloned = [];\n            for (let idx = 0; idx !== shrinkables.length; ++idx) {\n                cloned.push(shrinkables[idx].value);\n            }\n            this.makeItCloneable(cloned, shrinkables);\n            return cloned;\n        };\n        return vs;\n    }\n    wrapper(items) {\n        let cloneable = false;\n        const vs = [];\n        const contexts = [];\n        for (let idx = 0; idx !== items.length; ++idx) {\n            const s = items[idx];\n            cloneable = cloneable || s.hasToBeCloned;\n            vs.push(s.value);\n            contexts.push(s.context);\n        }\n        if (cloneable) {\n            CloneArbitrary.makeItCloneable(vs, items);\n        }\n        return new Value(vs, contexts);\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,+CAA+C;AACzE,SAASC,KAAK,QAAQ,2CAA2C;AACjE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAO,MAAMC,cAAc,SAASJ,SAAS,CAAC;EAC1CK,WAAW,CAACC,GAAG,EAAEC,SAAS,EAAE;IACxB,KAAK,EAAE;IACP,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EACAC,QAAQ,CAACC,IAAI,EAAEC,UAAU,EAAE;IACvB,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAI,IAAI,CAACJ,SAAS,IAAI,CAAC,EAAE;MACrB,OAAO,IAAI,CAACK,OAAO,CAACD,KAAK,CAAC;IAC9B;IACA,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAK,IAAI,CAACN,SAAS,GAAG,CAAC,EAAE,EAAEM,GAAG,EAAE;MACjDF,KAAK,CAACG,IAAI,CAAC,IAAI,CAACR,GAAG,CAACE,QAAQ,CAACC,IAAI,CAACM,KAAK,EAAE,EAAEL,UAAU,CAAC,CAAC;IAC3D;IACAC,KAAK,CAACG,IAAI,CAAC,IAAI,CAACR,GAAG,CAACE,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC,CAAC;IAC/C,OAAO,IAAI,CAACE,OAAO,CAACD,KAAK,CAAC;EAC9B;EACAK,uBAAuB,CAACC,KAAK,EAAE;IAC3B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,KAAK,IAAI,CAACb,SAAS,EAAE;MAC1D,OAAO,KAAK;IAChB;IACA,IAAIU,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACpB,OAAO,IAAI;IACf;IACA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,KAAK,CAACG,MAAM,EAAE,EAAEC,KAAK,EAAE;MAC/C,IAAI,CAACC,MAAM,CAACC,EAAE,CAACN,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE;QACpC,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI,CAACf,GAAG,CAACU,uBAAuB,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD;EACAO,MAAM,CAACP,KAAK,EAAEQ,OAAO,EAAE;IACnB,IAAIR,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACpB,OAAOjB,MAAM,CAACuB,GAAG,EAAE;IACvB;IACA,OAAO,IAAIvB,MAAM,CAAC,IAAI,CAACwB,UAAU,CAACV,KAAK,EAAEQ,OAAO,KAAKG,SAAS,GAAGH,OAAO,GAAG,EAAE,CAAC,CAAC,CAACI,GAAG,CAAEC,CAAC,IAAK,IAAI,CAAClB,OAAO,CAACkB,CAAC,CAAC,CAAC;EAC/G;EACA,CAACH,UAAU,CAACV,KAAK,EAAEc,QAAQ,EAAE;IACzB,MAAMC,GAAG,GAAGf,KAAK,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEjB,GAAG,KAAK,IAAI,CAACP,GAAG,CAACkB,MAAM,CAACM,CAAC,EAAEC,QAAQ,CAAClB,GAAG,CAAC,CAAC,CAACoB,MAAM,CAACC,QAAQ,CAAC,EAAE,CAAC;IACvF,IAAIC,GAAG,GAAGH,GAAG,CAACH,GAAG,CAAEO,EAAE,IAAKA,EAAE,CAACC,IAAI,EAAE,CAAC;IACpC,OAAO,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;MACjB,MAAMH,GAAG,CAACN,GAAG,CAAEU,CAAC,IAAKA,CAAC,CAACtB,KAAK,CAAC;MAC7BkB,GAAG,GAAGH,GAAG,CAACH,GAAG,CAAEO,EAAE,IAAKA,EAAE,CAACC,IAAI,EAAE,CAAC;IACpC;EACJ;EACA,OAAOG,eAAe,CAACC,EAAE,EAAEC,WAAW,EAAE;IACpCD,EAAE,CAACvC,WAAW,CAAC,GAAG,MAAM;MACpB,MAAMyC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAI9B,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAK6B,WAAW,CAACtB,MAAM,EAAE,EAAEP,GAAG,EAAE;QACjD8B,MAAM,CAAC7B,IAAI,CAAC4B,WAAW,CAAC7B,GAAG,CAAC,CAACI,KAAK,CAAC;MACvC;MACA,IAAI,CAACuB,eAAe,CAACG,MAAM,EAAED,WAAW,CAAC;MACzC,OAAOC,MAAM;IACjB,CAAC;IACD,OAAOF,EAAE;EACb;EACA7B,OAAO,CAACD,KAAK,EAAE;IACX,IAAIiC,SAAS,GAAG,KAAK;IACrB,MAAMH,EAAE,GAAG,EAAE;IACb,MAAMV,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIlB,GAAG,GAAG,CAAC,EAAEA,GAAG,KAAKF,KAAK,CAACS,MAAM,EAAE,EAAEP,GAAG,EAAE;MAC3C,MAAMgC,CAAC,GAAGlC,KAAK,CAACE,GAAG,CAAC;MACpB+B,SAAS,GAAGA,SAAS,IAAIC,CAAC,CAACC,aAAa;MACxCL,EAAE,CAAC3B,IAAI,CAAC+B,CAAC,CAAC5B,KAAK,CAAC;MAChBc,QAAQ,CAACjB,IAAI,CAAC+B,CAAC,CAACpB,OAAO,CAAC;IAC5B;IACA,IAAImB,SAAS,EAAE;MACXxC,cAAc,CAACoC,eAAe,CAACC,EAAE,EAAE9B,KAAK,CAAC;IAC7C;IACA,OAAO,IAAIV,KAAK,CAACwC,EAAE,EAAEV,QAAQ,CAAC;EAClC;AACJ"},"metadata":{},"sourceType":"module"}