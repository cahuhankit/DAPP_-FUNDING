{"ast":null,"code":"var MULTIPLIER = 0x000343fd;\nvar INCREMENT = 0x00269ec3;\nvar MASK = 0xffffffff;\nvar MASK_2 = (1 << 31) - 1;\nvar computeNextSeed = function (seed) {\n  return seed * MULTIPLIER + INCREMENT & MASK;\n};\nvar computeValueFromNextSeed = function (nextseed) {\n  return (nextseed & MASK_2) >> 16;\n};\nvar LinearCongruential = function () {\n  function LinearCongruential(seed) {\n    this.seed = seed;\n  }\n  LinearCongruential.prototype.min = function () {\n    return LinearCongruential.min;\n  };\n  LinearCongruential.prototype.max = function () {\n    return LinearCongruential.max;\n  };\n  LinearCongruential.prototype.clone = function () {\n    return new LinearCongruential(this.seed);\n  };\n  LinearCongruential.prototype.next = function () {\n    var nextRng = new LinearCongruential(this.seed);\n    var out = nextRng.unsafeNext();\n    return [out, nextRng];\n  };\n  LinearCongruential.prototype.unsafeNext = function () {\n    this.seed = computeNextSeed(this.seed);\n    return computeValueFromNextSeed(this.seed);\n  };\n  LinearCongruential.min = 0;\n  LinearCongruential.max = Math.pow(2, 15) - 1;\n  return LinearCongruential;\n}();\nvar LinearCongruential32 = function () {\n  function LinearCongruential32(seed) {\n    this.seed = seed;\n  }\n  LinearCongruential32.prototype.min = function () {\n    return LinearCongruential32.min;\n  };\n  LinearCongruential32.prototype.max = function () {\n    return LinearCongruential32.max;\n  };\n  LinearCongruential32.prototype.clone = function () {\n    return new LinearCongruential32(this.seed);\n  };\n  LinearCongruential32.prototype.next = function () {\n    var nextRng = new LinearCongruential32(this.seed);\n    var out = nextRng.unsafeNext();\n    return [out, nextRng];\n  };\n  LinearCongruential32.prototype.unsafeNext = function () {\n    var s1 = computeNextSeed(this.seed);\n    var v1 = computeValueFromNextSeed(s1);\n    var s2 = computeNextSeed(s1);\n    var v2 = computeValueFromNextSeed(s2);\n    this.seed = computeNextSeed(s2);\n    var v3 = computeValueFromNextSeed(this.seed);\n    var vnext = v3 + (v2 + (v1 << 15) << 15);\n    return (vnext + 0x80000000 | 0) + 0x80000000;\n  };\n  LinearCongruential32.min = 0;\n  LinearCongruential32.max = 0xffffffff;\n  return LinearCongruential32;\n}();\nexport var congruential = function (seed) {\n  return new LinearCongruential(seed);\n};\nexport var congruential32 = function (seed) {\n  return new LinearCongruential32(seed);\n};","map":{"version":3,"names":["MULTIPLIER","INCREMENT","MASK","MASK_2","computeNextSeed","seed","computeValueFromNextSeed","nextseed","LinearCongruential","prototype","min","max","clone","next","nextRng","out","unsafeNext","Math","pow","LinearCongruential32","s1","v1","s2","v2","v3","vnext","congruential","congruential32"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/pure-rand/lib/esm/generator/LinearCongruential.js"],"sourcesContent":["var MULTIPLIER = 0x000343fd;\nvar INCREMENT = 0x00269ec3;\nvar MASK = 0xffffffff;\nvar MASK_2 = (1 << 31) - 1;\nvar computeNextSeed = function (seed) {\n    return (seed * MULTIPLIER + INCREMENT) & MASK;\n};\nvar computeValueFromNextSeed = function (nextseed) {\n    return (nextseed & MASK_2) >> 16;\n};\nvar LinearCongruential = (function () {\n    function LinearCongruential(seed) {\n        this.seed = seed;\n    }\n    LinearCongruential.prototype.min = function () {\n        return LinearCongruential.min;\n    };\n    LinearCongruential.prototype.max = function () {\n        return LinearCongruential.max;\n    };\n    LinearCongruential.prototype.clone = function () {\n        return new LinearCongruential(this.seed);\n    };\n    LinearCongruential.prototype.next = function () {\n        var nextRng = new LinearCongruential(this.seed);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    LinearCongruential.prototype.unsafeNext = function () {\n        this.seed = computeNextSeed(this.seed);\n        return computeValueFromNextSeed(this.seed);\n    };\n    LinearCongruential.min = 0;\n    LinearCongruential.max = Math.pow(2, 15) - 1;\n    return LinearCongruential;\n}());\nvar LinearCongruential32 = (function () {\n    function LinearCongruential32(seed) {\n        this.seed = seed;\n    }\n    LinearCongruential32.prototype.min = function () {\n        return LinearCongruential32.min;\n    };\n    LinearCongruential32.prototype.max = function () {\n        return LinearCongruential32.max;\n    };\n    LinearCongruential32.prototype.clone = function () {\n        return new LinearCongruential32(this.seed);\n    };\n    LinearCongruential32.prototype.next = function () {\n        var nextRng = new LinearCongruential32(this.seed);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    LinearCongruential32.prototype.unsafeNext = function () {\n        var s1 = computeNextSeed(this.seed);\n        var v1 = computeValueFromNextSeed(s1);\n        var s2 = computeNextSeed(s1);\n        var v2 = computeValueFromNextSeed(s2);\n        this.seed = computeNextSeed(s2);\n        var v3 = computeValueFromNextSeed(this.seed);\n        var vnext = v3 + ((v2 + (v1 << 15)) << 15);\n        return ((vnext + 0x80000000) | 0) + 0x80000000;\n    };\n    LinearCongruential32.min = 0;\n    LinearCongruential32.max = 0xffffffff;\n    return LinearCongruential32;\n}());\nexport var congruential = function (seed) {\n    return new LinearCongruential(seed);\n};\nexport var congruential32 = function (seed) {\n    return new LinearCongruential32(seed);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}