{"ast":null,"code":"import { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigIntN(n) {\n  if (n < 1) {\n    throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n  }\n  const min = BigInt(-1) << BigInt(n - 1);\n  const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n  return new BigIntArbitrary(min, max);\n}","map":{"version":3,"names":["BigIntArbitrary","bigIntN","n","Error","min","BigInt","max"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/bigIntN.js"],"sourcesContent":["import { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigIntN(n) {\n    if (n < 1) {\n        throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n    }\n    const min = BigInt(-1) << BigInt(n - 1);\n    const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n    return new BigIntArbitrary(min, max);\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,iCAAiC;AACjE,OAAO,SAASC,OAAO,CAACC,CAAC,EAAE;EACvB,IAAIA,CAAC,GAAG,CAAC,EAAE;IACP,MAAM,IAAIC,KAAK,CAAC,0EAA0E,CAAC;EAC/F;EACA,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIA,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC;EACvC,MAAMI,GAAG,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC,IAAIG,MAAM,CAAC,CAAC,CAAC;EACpD,OAAO,IAAIL,eAAe,CAACI,GAAG,EAAEE,GAAG,CAAC;AACxC"},"metadata":{},"sourceType":"module"}