{"ast":null,"code":"import { MixedCaseArbitrary } from './_internals/MixedCaseArbitrary.js';\nfunction defaultToggleCase(rawChar) {\n  const upper = rawChar.toUpperCase();\n  if (upper !== rawChar) return upper;\n  return rawChar.toLowerCase();\n}\nexport function mixedCase(stringArb, constraints) {\n  if (typeof BigInt === 'undefined') {\n    throw new Error(`mixedCase requires BigInt support`);\n  }\n  const toggleCase = constraints && constraints.toggleCase || defaultToggleCase;\n  const untoggleAll = constraints && constraints.untoggleAll;\n  return new MixedCaseArbitrary(stringArb, toggleCase, untoggleAll);\n}","map":{"version":3,"names":["MixedCaseArbitrary","defaultToggleCase","rawChar","upper","toUpperCase","toLowerCase","mixedCase","stringArb","constraints","BigInt","Error","toggleCase","untoggleAll"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/mixedCase.js"],"sourcesContent":["import { MixedCaseArbitrary } from './_internals/MixedCaseArbitrary.js';\nfunction defaultToggleCase(rawChar) {\n    const upper = rawChar.toUpperCase();\n    if (upper !== rawChar)\n        return upper;\n    return rawChar.toLowerCase();\n}\nexport function mixedCase(stringArb, constraints) {\n    if (typeof BigInt === 'undefined') {\n        throw new Error(`mixedCase requires BigInt support`);\n    }\n    const toggleCase = (constraints && constraints.toggleCase) || defaultToggleCase;\n    const untoggleAll = constraints && constraints.untoggleAll;\n    return new MixedCaseArbitrary(stringArb, toggleCase, untoggleAll);\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,iBAAiB,CAACC,OAAO,EAAE;EAChC,MAAMC,KAAK,GAAGD,OAAO,CAACE,WAAW,EAAE;EACnC,IAAID,KAAK,KAAKD,OAAO,EACjB,OAAOC,KAAK;EAChB,OAAOD,OAAO,CAACG,WAAW,EAAE;AAChC;AACA,OAAO,SAASC,SAAS,CAACC,SAAS,EAAEC,WAAW,EAAE;EAC9C,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,IAAIC,KAAK,CAAE,mCAAkC,CAAC;EACxD;EACA,MAAMC,UAAU,GAAIH,WAAW,IAAIA,WAAW,CAACG,UAAU,IAAKV,iBAAiB;EAC/E,MAAMW,WAAW,GAAGJ,WAAW,IAAIA,WAAW,CAACI,WAAW;EAC1D,OAAO,IAAIZ,kBAAkB,CAACO,SAAS,EAAEI,UAAU,EAAEC,WAAW,CAAC;AACrE"},"metadata":{},"sourceType":"module"}