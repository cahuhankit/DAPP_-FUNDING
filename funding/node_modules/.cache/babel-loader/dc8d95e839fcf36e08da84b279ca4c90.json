{"ast":null,"code":"import { array } from './array.js';\nimport { buildLowerAlphaArbitrary, buildLowerAlphaNumericArbitrary } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { option } from './option.js';\nimport { stringOf } from './stringOf.js';\nimport { tuple } from './tuple.js';\nimport { filterInvalidSubdomainLabel } from './_internals/helpers/InvalidSubdomainLabelFiIter.js';\nimport { resolveSize, relativeSizeToSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\nfunction toSubdomainLabelMapper(_ref) {\n  let [f, d] = _ref;\n  return d === null ? f : `${f}${d[0]}${d[1]}`;\n}\nfunction toSubdomainLabelUnmapper(value) {\n  if (typeof value !== 'string' || value.length === 0) {\n    throw new Error('Unsupported');\n  }\n  if (value.length === 1) {\n    return [value[0], null];\n  }\n  return [value[0], [value.substring(1, value.length - 1), value[value.length - 1]]];\n}\nfunction subdomainLabel(size) {\n  const alphaNumericArb = buildLowerAlphaNumericArbitrary([]);\n  const alphaNumericHyphenArb = buildLowerAlphaNumericArbitrary(['-']);\n  return tuple(alphaNumericArb, option(tuple(stringOf(alphaNumericHyphenArb, {\n    size,\n    maxLength: 61\n  }), alphaNumericArb))).map(toSubdomainLabelMapper, toSubdomainLabelUnmapper).filter(filterInvalidSubdomainLabel);\n}\nfunction labelsMapper(elements) {\n  return `${elements[0].join('.')}.${elements[1]}`;\n}\nfunction labelsUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported type');\n  }\n  const lastDotIndex = value.lastIndexOf('.');\n  return [value.substring(0, lastDotIndex).split('.'), value.substring(lastDotIndex + 1)];\n}\nfunction labelsAdapter(labels) {\n  const [subDomains, suffix] = labels;\n  let lengthNotIncludingIndex = suffix.length;\n  for (let index = 0; index !== subDomains.length; ++index) {\n    lengthNotIncludingIndex += 1 + subDomains[index].length;\n    if (lengthNotIncludingIndex > 255) {\n      return {\n        adapted: true,\n        value: [subDomains.slice(0, index), suffix]\n      };\n    }\n  }\n  return {\n    adapted: false,\n    value: labels\n  };\n}\nexport function domain() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const resolvedSize = resolveSize(constraints.size);\n  const resolvedSizeMinusOne = relativeSizeToSize('-1', resolvedSize);\n  const alphaNumericArb = buildLowerAlphaArbitrary([]);\n  const publicSuffixArb = stringOf(alphaNumericArb, {\n    minLength: 2,\n    maxLength: 63,\n    size: resolvedSizeMinusOne\n  });\n  return adapter(tuple(array(subdomainLabel(resolvedSize), {\n    size: resolvedSizeMinusOne,\n    minLength: 1,\n    maxLength: 127\n  }), publicSuffixArb), labelsAdapter).map(labelsMapper, labelsUnmapper);\n}","map":{"version":3,"names":["array","buildLowerAlphaArbitrary","buildLowerAlphaNumericArbitrary","option","stringOf","tuple","filterInvalidSubdomainLabel","resolveSize","relativeSizeToSize","adapter","toSubdomainLabelMapper","f","d","toSubdomainLabelUnmapper","value","length","Error","substring","subdomainLabel","size","alphaNumericArb","alphaNumericHyphenArb","maxLength","map","filter","labelsMapper","elements","join","labelsUnmapper","lastDotIndex","lastIndexOf","split","labelsAdapter","labels","subDomains","suffix","lengthNotIncludingIndex","index","adapted","slice","domain","constraints","resolvedSize","resolvedSizeMinusOne","publicSuffixArb","minLength"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/domain.js"],"sourcesContent":["import { array } from './array.js';\nimport { buildLowerAlphaArbitrary, buildLowerAlphaNumericArbitrary, } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { option } from './option.js';\nimport { stringOf } from './stringOf.js';\nimport { tuple } from './tuple.js';\nimport { filterInvalidSubdomainLabel } from './_internals/helpers/InvalidSubdomainLabelFiIter.js';\nimport { resolveSize, relativeSizeToSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\nfunction toSubdomainLabelMapper([f, d]) {\n    return d === null ? f : `${f}${d[0]}${d[1]}`;\n}\nfunction toSubdomainLabelUnmapper(value) {\n    if (typeof value !== 'string' || value.length === 0) {\n        throw new Error('Unsupported');\n    }\n    if (value.length === 1) {\n        return [value[0], null];\n    }\n    return [value[0], [value.substring(1, value.length - 1), value[value.length - 1]]];\n}\nfunction subdomainLabel(size) {\n    const alphaNumericArb = buildLowerAlphaNumericArbitrary([]);\n    const alphaNumericHyphenArb = buildLowerAlphaNumericArbitrary(['-']);\n    return tuple(alphaNumericArb, option(tuple(stringOf(alphaNumericHyphenArb, { size, maxLength: 61 }), alphaNumericArb)))\n        .map(toSubdomainLabelMapper, toSubdomainLabelUnmapper)\n        .filter(filterInvalidSubdomainLabel);\n}\nfunction labelsMapper(elements) {\n    return `${elements[0].join('.')}.${elements[1]}`;\n}\nfunction labelsUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const lastDotIndex = value.lastIndexOf('.');\n    return [value.substring(0, lastDotIndex).split('.'), value.substring(lastDotIndex + 1)];\n}\nfunction labelsAdapter(labels) {\n    const [subDomains, suffix] = labels;\n    let lengthNotIncludingIndex = suffix.length;\n    for (let index = 0; index !== subDomains.length; ++index) {\n        lengthNotIncludingIndex += 1 + subDomains[index].length;\n        if (lengthNotIncludingIndex > 255) {\n            return { adapted: true, value: [subDomains.slice(0, index), suffix] };\n        }\n    }\n    return { adapted: false, value: labels };\n}\nexport function domain(constraints = {}) {\n    const resolvedSize = resolveSize(constraints.size);\n    const resolvedSizeMinusOne = relativeSizeToSize('-1', resolvedSize);\n    const alphaNumericArb = buildLowerAlphaArbitrary([]);\n    const publicSuffixArb = stringOf(alphaNumericArb, { minLength: 2, maxLength: 63, size: resolvedSizeMinusOne });\n    return (adapter(tuple(array(subdomainLabel(resolvedSize), { size: resolvedSizeMinusOne, minLength: 1, maxLength: 127 }), publicSuffixArb), labelsAdapter).map(labelsMapper, labelsUnmapper));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}