{"ast":null,"code":"export function numberToPaddedEightMapper(n) {\n  return n.toString(16).padStart(8, '0');\n}\nexport function numberToPaddedEightUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported type');\n  }\n  if (value.length !== 8) {\n    throw new Error('Unsupported value: invalid length');\n  }\n  const n = parseInt(value, 16);\n  if (value !== numberToPaddedEightMapper(n)) {\n    throw new Error('Unsupported value: invalid content');\n  }\n  return n;\n}","map":{"version":3,"names":["numberToPaddedEightMapper","n","toString","padStart","numberToPaddedEightUnmapper","value","Error","length","parseInt"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/NumberToPaddedEight.js"],"sourcesContent":["export function numberToPaddedEightMapper(n) {\n    return n.toString(16).padStart(8, '0');\n}\nexport function numberToPaddedEightUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    if (value.length !== 8) {\n        throw new Error('Unsupported value: invalid length');\n    }\n    const n = parseInt(value, 16);\n    if (value !== numberToPaddedEightMapper(n)) {\n        throw new Error('Unsupported value: invalid content');\n    }\n    return n;\n}\n"],"mappings":"AAAA,OAAO,SAASA,yBAAyB,CAACC,CAAC,EAAE;EACzC,OAAOA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC1C;AACA,OAAO,SAASC,2BAA2B,CAACC,KAAK,EAAE;EAC/C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EACvC;EACA,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,MAAM,IAAID,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,MAAML,CAAC,GAAGO,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC;EAC7B,IAAIA,KAAK,KAAKL,yBAAyB,CAACC,CAAC,CAAC,EAAE;IACxC,MAAM,IAAIK,KAAK,CAAC,oCAAoC,CAAC;EACzD;EACA,OAAOL,CAAC;AACZ"},"metadata":{},"sourceType":"module"}