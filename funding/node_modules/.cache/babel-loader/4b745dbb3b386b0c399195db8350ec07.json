{"ast":null,"code":"function readBh(value) {\n  if (value.length === 0) return [];else return value.split(':');\n}\nfunction extractEhAndL(value) {\n  const valueSplits = value.split(':');\n  if (valueSplits.length >= 2 && valueSplits[valueSplits.length - 1].length <= 4) {\n    return [valueSplits.slice(0, valueSplits.length - 2), `${valueSplits[valueSplits.length - 2]}:${valueSplits[valueSplits.length - 1]}`];\n  }\n  return [valueSplits.slice(0, valueSplits.length - 1), valueSplits[valueSplits.length - 1]];\n}\nexport function fullySpecifiedMapper(data) {\n  return `${data[0].join(':')}:${data[1]}`;\n}\nexport function fullySpecifiedUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  return extractEhAndL(value);\n}\nexport function onlyTrailingMapper(data) {\n  return `::${data[0].join(':')}:${data[1]}`;\n}\nexport function onlyTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  if (!value.startsWith('::')) throw new Error('Invalid value');\n  return extractEhAndL(value.substring(2));\n}\nexport function multiTrailingMapper(data) {\n  return `${data[0].join(':')}::${data[1].join(':')}:${data[2]}`;\n}\nexport function multiTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  const [bhString, trailingString] = value.split('::', 2);\n  const [eh, l] = extractEhAndL(trailingString);\n  return [readBh(bhString), eh, l];\n}\nexport function multiTrailingMapperOne(data) {\n  return multiTrailingMapper([data[0], [data[1]], data[2]]);\n}\nexport function multiTrailingUnmapperOne(value) {\n  const out = multiTrailingUnmapper(value);\n  return [out[0], out[1].join(':'), out[2]];\n}\nexport function singleTrailingMapper(data) {\n  return `${data[0].join(':')}::${data[1]}`;\n}\nexport function singleTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  const [bhString, trailing] = value.split('::', 2);\n  return [readBh(bhString), trailing];\n}\nexport function noTrailingMapper(data) {\n  return `${data[0].join(':')}::`;\n}\nexport function noTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  if (!value.endsWith('::')) throw new Error('Invalid value');\n  return [readBh(value.substring(0, value.length - 2))];\n}","map":{"version":3,"names":["readBh","value","length","split","extractEhAndL","valueSplits","slice","fullySpecifiedMapper","data","join","fullySpecifiedUnmapper","Error","onlyTrailingMapper","onlyTrailingUnmapper","startsWith","substring","multiTrailingMapper","multiTrailingUnmapper","bhString","trailingString","eh","l","multiTrailingMapperOne","multiTrailingUnmapperOne","out","singleTrailingMapper","singleTrailingUnmapper","trailing","noTrailingMapper","noTrailingUnmapper","endsWith"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/EntitiesToIPv6.js"],"sourcesContent":["function readBh(value) {\n    if (value.length === 0)\n        return [];\n    else\n        return value.split(':');\n}\nfunction extractEhAndL(value) {\n    const valueSplits = value.split(':');\n    if (valueSplits.length >= 2 && valueSplits[valueSplits.length - 1].length <= 4) {\n        return [\n            valueSplits.slice(0, valueSplits.length - 2),\n            `${valueSplits[valueSplits.length - 2]}:${valueSplits[valueSplits.length - 1]}`,\n        ];\n    }\n    return [valueSplits.slice(0, valueSplits.length - 1), valueSplits[valueSplits.length - 1]];\n}\nexport function fullySpecifiedMapper(data) {\n    return `${data[0].join(':')}:${data[1]}`;\n}\nexport function fullySpecifiedUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    return extractEhAndL(value);\n}\nexport function onlyTrailingMapper(data) {\n    return `::${data[0].join(':')}:${data[1]}`;\n}\nexport function onlyTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.startsWith('::'))\n        throw new Error('Invalid value');\n    return extractEhAndL(value.substring(2));\n}\nexport function multiTrailingMapper(data) {\n    return `${data[0].join(':')}::${data[1].join(':')}:${data[2]}`;\n}\nexport function multiTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailingString] = value.split('::', 2);\n    const [eh, l] = extractEhAndL(trailingString);\n    return [readBh(bhString), eh, l];\n}\nexport function multiTrailingMapperOne(data) {\n    return multiTrailingMapper([data[0], [data[1]], data[2]]);\n}\nexport function multiTrailingUnmapperOne(value) {\n    const out = multiTrailingUnmapper(value);\n    return [out[0], out[1].join(':'), out[2]];\n}\nexport function singleTrailingMapper(data) {\n    return `${data[0].join(':')}::${data[1]}`;\n}\nexport function singleTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailing] = value.split('::', 2);\n    return [readBh(bhString), trailing];\n}\nexport function noTrailingMapper(data) {\n    return `${data[0].join(':')}::`;\n}\nexport function noTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.endsWith('::'))\n        throw new Error('Invalid value');\n    return [readBh(value.substring(0, value.length - 2))];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}