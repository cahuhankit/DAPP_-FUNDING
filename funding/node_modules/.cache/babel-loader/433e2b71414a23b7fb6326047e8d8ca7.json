{"ast":null,"code":"import { stringify, possiblyAsyncStringify } from '../../../utils/stringify.js';\nimport { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from '../reporter/ExecutionStatus.js';\nfunction formatHints(hints) {\n  if (hints.length === 1) {\n    return `Hint: ${hints[0]}`;\n  }\n  return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n  return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n  const summaryLines = [];\n  const remainingTreesAndDepth = [];\n  for (const tree of executionTrees.slice().reverse()) {\n    remainingTreesAndDepth.push({\n      depth: 1,\n      tree\n    });\n  }\n  while (remainingTreesAndDepth.length !== 0) {\n    const currentTreeAndDepth = remainingTreesAndDepth.pop();\n    const currentTree = currentTreeAndDepth.tree;\n    const currentDepth = currentTreeAndDepth.depth;\n    const statusIcon = currentTree.status === ExecutionStatus.Success ? '\\x1b[32m\\u221A\\x1b[0m' : currentTree.status === ExecutionStatus.Failure ? '\\x1b[31m\\xD7\\x1b[0m' : '\\x1b[33m!\\x1b[0m';\n    const leftPadding = Array(currentDepth).join('. ');\n    summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n    for (const tree of currentTree.children.slice().reverse()) {\n      remainingTreesAndDepth.push({\n        depth: currentDepth + 1,\n        tree\n      });\n    }\n  }\n  return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n  const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n  let details = null;\n  const hints = ['Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries', 'Increase failure tolerance by setting maxSkipsPerRun to an higher value'];\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction preFormatFailure(out, stringifyOne) {\n  const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n  let details = null;\n  const hints = [];\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else if (out.verbose === VerbosityLevel.Verbose) {\n    details = formatFailures(out.failures, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n  const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n  let details = null;\n  const hints = [];\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n  if (!out.failed) return;\n  const {\n    message,\n    details,\n    hints\n  } = out.counterexamplePath === null ? out.interrupted ? preFormatEarlyInterrupted(out, stringifyOne) : preFormatTooManySkipped(out, stringifyOne) : preFormatFailure(out, stringifyOne);\n  let errorMessage = message;\n  if (details != null) errorMessage += `\\n\\n${details}`;\n  if (hints.length > 0) errorMessage += `\\n\\n${formatHints(hints)}`;\n  return errorMessage;\n}\nfunction defaultReportMessage(out) {\n  return defaultReportMessageInternal(out, stringify);\n}\nasync function asyncDefaultReportMessage(out) {\n  const pendingStringifieds = [];\n  function stringifyOne(value) {\n    const stringified = possiblyAsyncStringify(value);\n    if (typeof stringified === 'string') {\n      return stringified;\n    }\n    pendingStringifieds.push(Promise.all([value, stringified]));\n    return '\\u2026';\n  }\n  const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n  if (pendingStringifieds.length === 0) {\n    return firstTryMessage;\n  }\n  const registeredValues = new Map(await Promise.all(pendingStringifieds));\n  function stringifySecond(value) {\n    const asyncStringifiedIfRegistered = registeredValues.get(value);\n    if (asyncStringifiedIfRegistered !== undefined) {\n      return asyncStringifiedIfRegistered;\n    }\n    return stringify(value);\n  }\n  return defaultReportMessageInternal(out, stringifySecond);\n}\nfunction throwIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(await asyncDefaultReportMessage(out));\n}\nexport function reportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return throwIfFailed(out);\n}\nexport async function asyncReportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return asyncThrowIfFailed(out);\n}\nexport { defaultReportMessage, asyncDefaultReportMessage };","map":{"version":3,"names":["stringify","possiblyAsyncStringify","VerbosityLevel","ExecutionStatus","formatHints","hints","length","map","h","idx","join","formatFailures","failures","stringifyOne","formatExecutionSummary","executionTrees","summaryLines","remainingTreesAndDepth","tree","slice","reverse","push","depth","currentTreeAndDepth","pop","currentTree","currentDepth","statusIcon","status","Success","Failure","leftPadding","Array","value","children","preFormatTooManySkipped","out","message","seed","numRuns","numSkips","details","verbose","VeryVerbose","executionSummary","preFormatFailure","counterexamplePath","counterexample","numShrinks","error","Verbose","preFormatEarlyInterrupted","defaultReportMessageInternal","failed","interrupted","errorMessage","defaultReportMessage","asyncDefaultReportMessage","pendingStringifieds","stringified","Promise","all","firstTryMessage","registeredValues","Map","stringifySecond","asyncStringifiedIfRegistered","get","undefined","throwIfFailed","Error","asyncThrowIfFailed","reportRunDetails","runConfiguration","asyncReporter","reporter","asyncReportRunDetails"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/check/runner/utils/RunDetailsFormatter.js"],"sourcesContent":["import { stringify, possiblyAsyncStringify } from '../../../utils/stringify.js';\nimport { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from '../reporter/ExecutionStatus.js';\nfunction formatHints(hints) {\n    if (hints.length === 1) {\n        return `Hint: ${hints[0]}`;\n    }\n    return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n    return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n    const summaryLines = [];\n    const remainingTreesAndDepth = [];\n    for (const tree of executionTrees.slice().reverse()) {\n        remainingTreesAndDepth.push({ depth: 1, tree });\n    }\n    while (remainingTreesAndDepth.length !== 0) {\n        const currentTreeAndDepth = remainingTreesAndDepth.pop();\n        const currentTree = currentTreeAndDepth.tree;\n        const currentDepth = currentTreeAndDepth.depth;\n        const statusIcon = currentTree.status === ExecutionStatus.Success\n            ? '\\x1b[32m\\u221A\\x1b[0m'\n            : currentTree.status === ExecutionStatus.Failure\n                ? '\\x1b[31m\\xD7\\x1b[0m'\n                : '\\x1b[33m!\\x1b[0m';\n        const leftPadding = Array(currentDepth).join('. ');\n        summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n        for (const tree of currentTree.children.slice().reverse()) {\n            remainingTreesAndDepth.push({ depth: currentDepth + 1, tree });\n        }\n    }\n    return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n    const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n    let details = null;\n    const hints = [\n        'Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries',\n        'Increase failure tolerance by setting maxSkipsPerRun to an higher value',\n    ];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction preFormatFailure(out, stringifyOne) {\n    const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else if (out.verbose === VerbosityLevel.Verbose) {\n        details = formatFailures(out.failures, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n    }\n    return { message, details, hints };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n    const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n    if (!out.failed)\n        return;\n    const { message, details, hints } = out.counterexamplePath === null\n        ? out.interrupted\n            ? preFormatEarlyInterrupted(out, stringifyOne)\n            : preFormatTooManySkipped(out, stringifyOne)\n        : preFormatFailure(out, stringifyOne);\n    let errorMessage = message;\n    if (details != null)\n        errorMessage += `\\n\\n${details}`;\n    if (hints.length > 0)\n        errorMessage += `\\n\\n${formatHints(hints)}`;\n    return errorMessage;\n}\nfunction defaultReportMessage(out) {\n    return defaultReportMessageInternal(out, stringify);\n}\nasync function asyncDefaultReportMessage(out) {\n    const pendingStringifieds = [];\n    function stringifyOne(value) {\n        const stringified = possiblyAsyncStringify(value);\n        if (typeof stringified === 'string') {\n            return stringified;\n        }\n        pendingStringifieds.push(Promise.all([value, stringified]));\n        return '\\u2026';\n    }\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n    if (pendingStringifieds.length === 0) {\n        return firstTryMessage;\n    }\n    const registeredValues = new Map(await Promise.all(pendingStringifieds));\n    function stringifySecond(value) {\n        const asyncStringifiedIfRegistered = registeredValues.get(value);\n        if (asyncStringifiedIfRegistered !== undefined) {\n            return asyncStringifiedIfRegistered;\n        }\n        return stringify(value);\n    }\n    return defaultReportMessageInternal(out, stringifySecond);\n}\nfunction throwIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(await asyncDefaultReportMessage(out));\n}\nexport function reportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return throwIfFailed(out);\n}\nexport async function asyncReportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return asyncThrowIfFailed(out);\n}\nexport { defaultReportMessage, asyncDefaultReportMessage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}