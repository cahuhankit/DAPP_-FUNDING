{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionExternalCases = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:wrap:function\");\nconst dispatch_1 = require(\"./dispatch\");\nconst errors_1 = require(\"./errors\");\nconst Messages = __importStar(require(\"./messages\"));\nconst Utils = __importStar(require(\"./utils\"));\nconst EvmUtils = __importStar(require(\"../evm/utils\"));\nconst web3_utils_1 = __importDefault(require(\"web3-utils\"));\nconst address_1 = require(\"./address\");\nconst bytes_1 = require(\"./bytes\");\nconst functionExternalCasesBasic = [functionFromFunctionExternalInput, functionFromHexString, functionFromCodecFunctionExternalValue, functionFailureCase];\nexports.functionExternalCases = [functionFromTypeValueInput, ...functionExternalCasesBasic];\nfunction* functionFromFunctionExternalInput(dataType, input, wrapOptions) {\n  if (!Utils.isFunctionExternalInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not an object with address & selector\");\n  }\n  const wrappedAddress = yield* (0, dispatch_1.wrapWithCases)({\n    typeClass: \"address\",\n    kind: \"general\"\n  }, input.address, Object.assign(Object.assign({}, wrapOptions), {\n    name: `${wrapOptions.name}.address`,\n    specificityFloor: 5\n  }), address_1.addressCases);\n  const address = wrappedAddress.value.asAddress;\n  const wrappedSelector = yield* (0, dispatch_1.wrapWithCases)({\n    typeClass: \"bytes\",\n    kind: \"static\",\n    length: 4\n  }, input.selector, Object.assign(Object.assign({}, wrapOptions), {\n    name: `${wrapOptions.name}.selector`,\n    specificityFloor: 5\n  }), bytes_1.bytesCases);\n  const selector = wrappedSelector.value.asHex;\n  //note validation & normalization have already been performed\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\nfunction* functionFromCodecFunctionExternalValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n  if (input.type.typeClass !== \"function\" || input.type.visibility !== \"external\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n  const coercedInput = input;\n  const address = coercedInput.value.contract.address;\n  const selector = coercedInput.value.selector;\n  //we can skip validation & normalization here\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\nfunction* functionFromHexString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n  if (!Utils.isByteString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, \"Input was a string, but not a valid even-length hex string\");\n  }\n  if (input.length !== 2 + 2 * (EvmUtils.ADDRESS_SIZE + EvmUtils.SELECTOR_SIZE)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrongLengthMessage(\"external function was given as a string but\", EvmUtils.ADDRESS_SIZE + EvmUtils.SELECTOR_SIZE, (input.length - 2) / 2));\n  }\n  let address = input.slice(0, EvmUtils.ADDRESS_SIZE * 2 + 2).toLowerCase();\n  const selector = \"0x\" + input.slice(EvmUtils.ADDRESS_SIZE * 2 + 2).toLowerCase();\n  //address & selector must now have the correct length, and we are deliberately *not*\n  //checking the checksum on address in this case.  So, the only thing remaining\n  //to do is to normalize address.\n  address = web3_utils_1.default.toChecksumAddress(address);\n  //...and return\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\nfunction* functionFromTypeValueInput(dataType, input, wrapOptions) {\n  if (!Utils.isTypeValueInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a type/value pair\");\n  }\n  if (input.type !== \"function\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  }\n  //extract value & try again, with loose option turned on\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.value, Object.assign(Object.assign({}, wrapOptions), {\n    loose: true\n  }), functionExternalCasesBasic);\n}\nfunction* functionFailureCase(dataType, input, wrapOptions) {\n  throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 2, \"Input should be one of: an object with address and selector; a 24-byte hex string; a type/value pair; or a wrapped external function\");\n}","map":{"version":3,"mappings":"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","names":["debug","functionExternalCasesBasic","functionFromFunctionExternalInput","functionFromHexString","functionFromCodecFunctionExternalValue","functionFailureCase","exports","functionFromTypeValueInput","dataType","input","wrapOptions","Utils","isFunctionExternalInput","errors_1","name","wrappedAddress","typeClass","kind","address","specificityFloor","address_1","value","asAddress","wrappedSelector","length","selector","bytes_1","asHex","type","contract","isWrappedResult","visibility","Messages","wrappedTypeMessage","errorResultMessage","coercedInput","isByteString","EvmUtils","ADDRESS_SIZE","SELECTOR_SIZE","wrongLengthMessage","slice","toLowerCase","web3_utils_1","toChecksumAddress","isTypeValueInput","specifiedTypeMessage","loose"],"sourceRoot":"","sources":["../../../lib/wrap/function.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}