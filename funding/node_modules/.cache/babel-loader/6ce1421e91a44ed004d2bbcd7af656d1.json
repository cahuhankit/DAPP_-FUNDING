{"ast":null,"code":"export function segmentsToPathMapper(segments) {\n  return segments.map(v => `/${v}`).join('');\n}\nexport function segmentsToPathUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Incompatible value received: type');\n  }\n  if (value.length !== 0 && value[0] !== '/') {\n    throw new Error('Incompatible value received: start');\n  }\n  return value.split('/').splice(1);\n}","map":{"version":3,"names":["segmentsToPathMapper","segments","map","v","join","segmentsToPathUnmapper","value","Error","length","split","splice"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/SegmentsToPath.js"],"sourcesContent":["export function segmentsToPathMapper(segments) {\n    return segments.map((v) => `/${v}`).join('');\n}\nexport function segmentsToPathUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Incompatible value received: type');\n    }\n    if (value.length !== 0 && value[0] !== '/') {\n        throw new Error('Incompatible value received: start');\n    }\n    return value.split('/').splice(1);\n}\n"],"mappings":"AAAA,OAAO,SAASA,oBAAoB,CAACC,QAAQ,EAAE;EAC3C,OAAOA,QAAQ,CAACC,GAAG,CAAEC,CAAC,IAAM,IAAGA,CAAE,EAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAChD;AACA,OAAO,SAASC,sBAAsB,CAACC,KAAK,EAAE;EAC1C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,IAAIF,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACxC,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACzD;EACA,OAAOD,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;AACrC"},"metadata":{},"sourceType":"module"}