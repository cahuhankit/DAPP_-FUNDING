{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeTypeId = exports.contextToType = void 0;\nfunction contextToType(context) {\n  if (context.contractId !== undefined) {\n    return {\n      typeClass: \"contract\",\n      kind: \"native\",\n      id: makeTypeId(context.contractId, context.compilationId),\n      typeName: context.contractName,\n      contractKind: context.contractKind,\n      payable: context.payable\n    };\n  } else {\n    return {\n      typeClass: \"contract\",\n      kind: \"foreign\",\n      typeName: context.contractName,\n      contractKind: context.contractKind,\n      payable: context.payable\n    };\n  }\n}\nexports.contextToType = contextToType;\n//NOTE: I am exporting this for use in other import functions, but please don't\n//use this elsewhere!\n//If you have to make a type ID, instead make the type and then\n//take its ID.\nfunction makeTypeId(astId, compilationId) {\n  return `${compilationId}:${astId}`;\n}\nexports.makeTypeId = makeTypeId;","map":{"version":3,"mappings":";;;;;;AAGA,SAAgBA,aAAa,CAACC,OAAgB;EAC5C,IAAIA,OAAO,CAACC,UAAU,KAAKC,SAAS,EAAE;IACpC,OAAO;MACLC,SAAS,EAAE,UAAU;MACrBC,IAAI,EAAE,QAAQ;MACdC,EAAE,EAAEC,UAAU,CAACN,OAAO,CAACC,UAAU,EAAED,OAAO,CAACO,aAAa,CAAC;MACzDC,QAAQ,EAAER,OAAO,CAACS,YAAY;MAC9BC,YAAY,EAAEV,OAAO,CAACU,YAAY;MAClCC,OAAO,EAAEX,OAAO,CAACW;KAClB;GACF,MAAM;IACL,OAAO;MACLR,SAAS,EAAE,UAAU;MACrBC,IAAI,EAAE,SAAS;MACfI,QAAQ,EAAER,OAAO,CAACS,YAAY;MAC9BC,YAAY,EAAEV,OAAO,CAACU,YAAY;MAClCC,OAAO,EAAEX,OAAO,CAACW;KAClB;;AAEL;AAnBAC;AAqBA;AACA;AACA;AACA;AACA,SAAgBN,UAAU,CAACO,KAAa,EAAEN,aAAqB;EAC7D,OAAO,GAAGA,aAAa,IAAIM,KAAK,EAAE;AACpC;AAFAD","names":["contextToType","context","contractId","undefined","typeClass","kind","id","makeTypeId","compilationId","typeName","contractName","contractKind","payable","exports","astId"],"sourceRoot":"","sources":["../../../../lib/contexts/import/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}