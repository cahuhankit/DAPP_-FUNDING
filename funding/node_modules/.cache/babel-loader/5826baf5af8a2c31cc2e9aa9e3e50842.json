{"ast":null,"code":"export class ScheduledCommand {\n  constructor(s, cmd) {\n    this.s = s;\n    this.cmd = cmd;\n  }\n  async check(m) {\n    let error = null;\n    let checkPassed = false;\n    const status = await this.s.scheduleSequence([{\n      label: `check@${this.cmd.toString()}`,\n      builder: async () => {\n        try {\n          checkPassed = await Promise.resolve(this.cmd.check(m));\n        } catch (err) {\n          error = err;\n          throw err;\n        }\n      }\n    }]).task;\n    if (status.faulty) {\n      throw error;\n    }\n    return checkPassed;\n  }\n  async run(m, r) {\n    let error = null;\n    const status = await this.s.scheduleSequence([{\n      label: `run@${this.cmd.toString()}`,\n      builder: async () => {\n        try {\n          await this.cmd.run(m, r);\n        } catch (err) {\n          error = err;\n          throw err;\n        }\n      }\n    }]).task;\n    if (status.faulty) {\n      throw error;\n    }\n  }\n}\nexport const scheduleCommands = function* (s, cmds) {\n  for (const cmd of cmds) {\n    yield new ScheduledCommand(s, cmd);\n  }\n};","map":{"version":3,"names":["ScheduledCommand","constructor","s","cmd","check","m","error","checkPassed","status","scheduleSequence","label","toString","builder","Promise","resolve","err","task","faulty","run","r","scheduleCommands","cmds"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/check/model/commands/ScheduledCommand.js"],"sourcesContent":["export class ScheduledCommand {\n    constructor(s, cmd) {\n        this.s = s;\n        this.cmd = cmd;\n    }\n    async check(m) {\n        let error = null;\n        let checkPassed = false;\n        const status = await this.s.scheduleSequence([\n            {\n                label: `check@${this.cmd.toString()}`,\n                builder: async () => {\n                    try {\n                        checkPassed = await Promise.resolve(this.cmd.check(m));\n                    }\n                    catch (err) {\n                        error = err;\n                        throw err;\n                    }\n                },\n            },\n        ]).task;\n        if (status.faulty) {\n            throw error;\n        }\n        return checkPassed;\n    }\n    async run(m, r) {\n        let error = null;\n        const status = await this.s.scheduleSequence([\n            {\n                label: `run@${this.cmd.toString()}`,\n                builder: async () => {\n                    try {\n                        await this.cmd.run(m, r);\n                    }\n                    catch (err) {\n                        error = err;\n                        throw err;\n                    }\n                },\n            },\n        ]).task;\n        if (status.faulty) {\n            throw error;\n        }\n    }\n}\nexport const scheduleCommands = function* (s, cmds) {\n    for (const cmd of cmds) {\n        yield new ScheduledCommand(s, cmd);\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,CAAC;EAC1BC,WAAW,CAACC,CAAC,EAAEC,GAAG,EAAE;IAChB,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,GAAG,GAAGA,GAAG;EAClB;EACA,MAAMC,KAAK,CAACC,CAAC,EAAE;IACX,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,WAAW,GAAG,KAAK;IACvB,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACN,CAAC,CAACO,gBAAgB,CAAC,CACzC;MACIC,KAAK,EAAG,SAAQ,IAAI,CAACP,GAAG,CAACQ,QAAQ,EAAG,EAAC;MACrCC,OAAO,EAAE,YAAY;QACjB,IAAI;UACAL,WAAW,GAAG,MAAMM,OAAO,CAACC,OAAO,CAAC,IAAI,CAACX,GAAG,CAACC,KAAK,CAACC,CAAC,CAAC,CAAC;QAC1D,CAAC,CACD,OAAOU,GAAG,EAAE;UACRT,KAAK,GAAGS,GAAG;UACX,MAAMA,GAAG;QACb;MACJ;IACJ,CAAC,CACJ,CAAC,CAACC,IAAI;IACP,IAAIR,MAAM,CAACS,MAAM,EAAE;MACf,MAAMX,KAAK;IACf;IACA,OAAOC,WAAW;EACtB;EACA,MAAMW,GAAG,CAACb,CAAC,EAAEc,CAAC,EAAE;IACZ,IAAIb,KAAK,GAAG,IAAI;IAChB,MAAME,MAAM,GAAG,MAAM,IAAI,CAACN,CAAC,CAACO,gBAAgB,CAAC,CACzC;MACIC,KAAK,EAAG,OAAM,IAAI,CAACP,GAAG,CAACQ,QAAQ,EAAG,EAAC;MACnCC,OAAO,EAAE,YAAY;QACjB,IAAI;UACA,MAAM,IAAI,CAACT,GAAG,CAACe,GAAG,CAACb,CAAC,EAAEc,CAAC,CAAC;QAC5B,CAAC,CACD,OAAOJ,GAAG,EAAE;UACRT,KAAK,GAAGS,GAAG;UACX,MAAMA,GAAG;QACb;MACJ;IACJ,CAAC,CACJ,CAAC,CAACC,IAAI;IACP,IAAIR,MAAM,CAACS,MAAM,EAAE;MACf,MAAMX,KAAK;IACf;EACJ;AACJ;AACA,OAAO,MAAMc,gBAAgB,GAAG,WAAWlB,CAAC,EAAEmB,IAAI,EAAE;EAChD,KAAK,MAAMlB,GAAG,IAAIkB,IAAI,EAAE;IACpB,MAAM,IAAIrB,gBAAgB,CAACE,CAAC,EAAEC,GAAG,CAAC;EACtC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}