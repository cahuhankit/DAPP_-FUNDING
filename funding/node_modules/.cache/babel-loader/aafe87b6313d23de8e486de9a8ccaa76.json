{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { array } from '../../array.js';\nexport function typedIntArrayArbitraryArbitraryBuilder(constraints, defaultMin, defaultMax, TypedArrayClass, arbitraryBuilder) {\n  const generatorName = TypedArrayClass.name;\n  const {\n      min = defaultMin,\n      max = defaultMax\n    } = constraints,\n    arrayConstraints = __rest(constraints, [\"min\", \"max\"]);\n  if (min > max) {\n    throw new Error(`Invalid range passed to ${generatorName}: min must be lower than or equal to max`);\n  }\n  if (min < defaultMin) {\n    throw new Error(`Invalid min value passed to ${generatorName}: min must be greater than or equal to ${defaultMin}`);\n  }\n  if (max > defaultMax) {\n    throw new Error(`Invalid max value passed to ${generatorName}: max must be lower than or equal to ${defaultMax}`);\n  }\n  return array(arbitraryBuilder({\n    min,\n    max\n  }), arrayConstraints).map(data => TypedArrayClass.from(data), value => {\n    if (!(value instanceof TypedArrayClass)) throw new Error('Invalid type');\n    return [...value];\n  });\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","array","typedIntArrayArbitraryArbitraryBuilder","constraints","defaultMin","defaultMax","TypedArrayClass","arbitraryBuilder","generatorName","name","min","max","arrayConstraints","Error","map","data","from","value"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/TypedIntArrayArbitraryBuilder.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array } from '../../array.js';\nexport function typedIntArrayArbitraryArbitraryBuilder(constraints, defaultMin, defaultMax, TypedArrayClass, arbitraryBuilder) {\n    const generatorName = TypedArrayClass.name;\n    const { min = defaultMin, max = defaultMax } = constraints, arrayConstraints = __rest(constraints, [\"min\", \"max\"]);\n    if (min > max) {\n        throw new Error(`Invalid range passed to ${generatorName}: min must be lower than or equal to max`);\n    }\n    if (min < defaultMin) {\n        throw new Error(`Invalid min value passed to ${generatorName}: min must be greater than or equal to ${defaultMin}`);\n    }\n    if (max > defaultMax) {\n        throw new Error(`Invalid max value passed to ${generatorName}: max must be lower than or equal to ${defaultMax}`);\n    }\n    return array(arbitraryBuilder({ min, max }), arrayConstraints).map((data) => TypedArrayClass.from(data), (value) => {\n        if (!(value instanceof TypedArrayClass))\n            throw new Error('Invalid type');\n        return [...value];\n    });\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAC/ED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACf,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAC/D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACpE,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAC1ER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACzB;EACJ,OAAOR,CAAC;AACZ,CAAC;AACD,SAASW,KAAK,QAAQ,gBAAgB;AACtC,OAAO,SAASC,sCAAsC,CAACC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,eAAe,EAAEC,gBAAgB,EAAE;EAC3H,MAAMC,aAAa,GAAGF,eAAe,CAACG,IAAI;EAC1C,MAAM;MAAEC,GAAG,GAAGN,UAAU;MAAEO,GAAG,GAAGN;IAAW,CAAC,GAAGF,WAAW;IAAES,gBAAgB,GAAGzB,MAAM,CAACgB,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EAClH,IAAIO,GAAG,GAAGC,GAAG,EAAE;IACX,MAAM,IAAIE,KAAK,CAAE,2BAA0BL,aAAc,0CAAyC,CAAC;EACvG;EACA,IAAIE,GAAG,GAAGN,UAAU,EAAE;IAClB,MAAM,IAAIS,KAAK,CAAE,+BAA8BL,aAAc,0CAAyCJ,UAAW,EAAC,CAAC;EACvH;EACA,IAAIO,GAAG,GAAGN,UAAU,EAAE;IAClB,MAAM,IAAIQ,KAAK,CAAE,+BAA8BL,aAAc,wCAAuCH,UAAW,EAAC,CAAC;EACrH;EACA,OAAOJ,KAAK,CAACM,gBAAgB,CAAC;IAAEG,GAAG;IAAEC;EAAI,CAAC,CAAC,EAAEC,gBAAgB,CAAC,CAACE,GAAG,CAAEC,IAAI,IAAKT,eAAe,CAACU,IAAI,CAACD,IAAI,CAAC,EAAGE,KAAK,IAAK;IAChH,IAAI,EAAEA,KAAK,YAAYX,eAAe,CAAC,EACnC,MAAM,IAAIO,KAAK,CAAC,cAAc,CAAC;IACnC,OAAO,CAAC,GAAGI,KAAK,CAAC;EACrB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}