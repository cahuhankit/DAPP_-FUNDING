{"ast":null,"code":"'use strict';\n\nconst stream = require('stream');\nconst util = require('util');\nconst utils = require('./utils');\nconst Simple = require('./simple');\nconst Decoder = require('./decoder');\nconst constants = require('./constants');\nconst bignumber = require('bignumber.js').BigNumber;\nconst NoFilter = require('nofilter');\nconst MT = constants.MT;\nconst NUMBYTES = constants.NUMBYTES;\nconst SYMS = constants.SYMS;\nfunction plural(c) {\n  if (c > 1) {\n    return 's';\n  } else {\n    return '';\n  }\n}\n\n/**\n * Generate the expanded format of RFC 7049, section 2.2.1\n *\n * @extends {stream.Transform}\n */\nclass Commented extends stream.Transform {\n  /**\n   * Create a CBOR commenter.\n   *\n   * @param {object} [options={}] - Stream options\n   * @param {number} [options.max_depth=10] - how many times to indent\n   *   the dashes\n   * @param {number} [options.depth=1] - initial indentation depth\n   * @param {boolean} [options.no_summary=false] - if true, omit the summary\n   *   of the full bytes read at the end\n   */\n  constructor(options) {\n    const opts = Object.assign({\n      depth: 1,\n      max_depth: 10,\n      no_summary: false\n    }, options, {\n      readableObjectMode: false,\n      writableObjectMode: false\n    });\n    const max_depth = opts.max_depth;\n    delete opts.max_depth;\n    const depth = opts.depth;\n    delete opts.depth;\n    super(opts);\n    this.depth = depth;\n    this.max_depth = max_depth;\n    this.all = new NoFilter();\n    opts.tags = {\n      24: this._tag_24.bind(this)\n    };\n    this.parser = new Decoder(opts);\n    this.parser.on('value', this._on_value.bind(this));\n    this.parser.on('start', this._on_start.bind(this));\n    this.parser.on('start-string', this._on_start_string.bind(this));\n    this.parser.on('stop', this._on_stop.bind(this));\n    this.parser.on('more-bytes', this._on_more.bind(this));\n    this.parser.on('error', this._on_error.bind(this));\n    if (!opts.no_summary) {\n      this.parser.on('data', this._on_data.bind(this));\n    }\n    this.parser.bs.on('read', this._on_read.bind(this));\n  }\n\n  /**\n   * @private\n   */\n  _tag_24(v) {\n    const c = new Commented({\n      depth: this.depth + 1,\n      no_summary: true\n    });\n    c.on('data', b => this.push(b));\n    c.on('error', er => this.emit('error', er));\n    c.end(v);\n  }\n  _transform(fresh, encoding, cb) {\n    this.parser.write(fresh, encoding, cb);\n  }\n\n  /**\n   * @private\n   */\n  _flush(cb) {\n    // TODO: find the test that covers this, and look at the return value\n    return this.parser._flush(cb);\n  }\n\n  /**\n   * @callback commentCallback\n   * @param {Error} [error] - if one was generated\n   * @param {string} [commented] - the comment string\n   */\n\n  /**\n   * @typedef CommentOptions\n   * @property {number} [max_depth=10] how many times to indent the dashes\n   * @property {string} [encoding='hex'] encoding of the input\n   */\n  /**\n   * Comment on an input Buffer or string, creating a string passed to the\n   * callback.  If callback not specified, a promise is returned.\n   *\n   * @static\n   * @param {string|Buffer} input\n   * @param {CommentOptions|commentCallback|string} [options] or callback\n   * @param {commentCallback=} cb\n   * @returns {Promise} if cb not specified\n   */\n  static comment(input, options, cb) {\n    if (input == null) {\n      throw new Error('input required');\n    }\n    let encoding = typeof input === 'string' ? 'hex' : void 0;\n    let max_depth = 10;\n    switch (typeof options) {\n      case 'function':\n        cb = options;\n        break;\n      case 'string':\n        encoding = options;\n        break;\n      case 'number':\n        max_depth = options;\n        break;\n      case 'object':\n        const ref1 = options.encoding;\n        const ref2 = options.max_depth;\n        encoding = ref1 != null ? ref1 : encoding;\n        max_depth = ref2 != null ? ref2 : max_depth;\n        break;\n      case 'undefined':\n        break;\n      default:\n        throw new Error('Unknown option type');\n    }\n    const bs = new NoFilter();\n    const d = new Commented({\n      max_depth\n    });\n    let p = null;\n    if (typeof cb === 'function') {\n      d.on('end', () => {\n        cb(null, bs.toString('utf8'));\n      });\n      d.on('error', cb);\n    } else {\n      p = new Promise((resolve, reject) => {\n        d.on('end', () => {\n          resolve(bs.toString('utf8'));\n        });\n        return d.on('error', reject);\n      });\n    }\n    d.pipe(bs);\n    d.end(input, encoding);\n    return p;\n  }\n\n  /**\n   * @private\n   */\n  _on_error(er) {\n    this.push('ERROR: ');\n    this.push(er.toString());\n    this.push('\\n');\n  }\n\n  /**\n   * @private\n   */\n  _on_read(buf) {\n    this.all.write(buf);\n    const hex = buf.toString('hex');\n    this.push(new Array(this.depth + 1).join('  '));\n    this.push(hex);\n    let ind = (this.max_depth - this.depth) * 2;\n    ind -= hex.length;\n    if (ind < 1) {\n      ind = 1;\n    }\n    this.push(new Array(ind + 1).join(' '));\n    return this.push('-- ');\n  }\n\n  /**\n   * @private\n   */\n  _on_more(mt, len, parent_mt, pos) {\n    this.depth++;\n    let desc = '';\n    switch (mt) {\n      case MT.POS_INT:\n        desc = 'Positive number,';\n        break;\n      case MT.NEG_INT:\n        desc = 'Negative number,';\n        break;\n      case MT.ARRAY:\n        desc = 'Array, length';\n        break;\n      case MT.MAP:\n        desc = 'Map, count';\n        break;\n      case MT.BYTE_STRING:\n        desc = 'Bytes, length';\n        break;\n      case MT.UTF8_STRING:\n        desc = 'String, length';\n        break;\n      case MT.SIMPLE_FLOAT:\n        if (len === 1) {\n          desc = 'Simple value,';\n        } else {\n          desc = 'Float,';\n        }\n        break;\n    }\n    return this.push(desc + ' next ' + len + ' byte' + plural(len) + '\\n');\n  }\n\n  /**\n   * @private\n   */\n  _on_start_string(mt, tag, parent_mt, pos) {\n    this.depth++;\n    let desc = '';\n    switch (mt) {\n      case MT.BYTE_STRING:\n        desc = 'Bytes, length: ' + tag;\n        break;\n      case MT.UTF8_STRING:\n        desc = 'String, length: ' + tag.toString();\n        break;\n    }\n    return this.push(desc + '\\n');\n  }\n\n  /**\n   * @private\n   */\n  _on_start(mt, tag, parent_mt, pos) {\n    this.depth++;\n    if (tag !== SYMS.BREAK) {\n      switch (parent_mt) {\n        case MT.ARRAY:\n          this.push(`[${pos}], `);\n          break;\n        case MT.MAP:\n          if (pos % 2) {\n            this.push(`{Val:${Math.floor(pos / 2)}}, `);\n          } else {\n            this.push(`{Key:${Math.floor(pos / 2)}}, `);\n          }\n          break;\n      }\n    }\n    switch (mt) {\n      case MT.TAG:\n        this.push(`Tag #${tag}`);\n        if (tag == 24) {\n          this.push(' Encoded CBOR data item');\n        }\n        break;\n      case MT.ARRAY:\n        if (tag === SYMS.STREAM) {\n          this.push('Array (streaming)');\n        } else {\n          this.push(`Array, ${tag} item${plural(tag)}`);\n        }\n        break;\n      case MT.MAP:\n        if (tag === SYMS.STREAM) {\n          this.push('Map (streaming)');\n        } else {\n          this.push(`Map, ${tag} pair${plural(tag)}`);\n        }\n        break;\n      case MT.BYTE_STRING:\n        this.push('Bytes (streaming)');\n        break;\n      case MT.UTF8_STRING:\n        this.push('String (streaming)');\n        break;\n    }\n    return this.push('\\n');\n  }\n\n  /**\n   * @private\n   */\n  _on_stop(mt) {\n    return this.depth--;\n  }\n\n  /**\n   * @private\n   */\n  _on_value(val, parent_mt, pos, ai) {\n    if (val !== SYMS.BREAK) {\n      switch (parent_mt) {\n        case MT.ARRAY:\n          this.push(`[${pos}], `);\n          break;\n        case MT.MAP:\n          if (pos % 2) {\n            this.push(`{Val:${Math.floor(pos / 2)}}, `);\n          } else {\n            this.push(`{Key:${Math.floor(pos / 2)}}, `);\n          }\n          break;\n      }\n    }\n    if (val === SYMS.BREAK) {\n      this.push('BREAK\\n');\n    } else if (val === SYMS.NULL) {\n      this.push('null\\n');\n    } else if (val === SYMS.UNDEFINED) {\n      this.push('undefined\\n');\n    } else if (typeof val === 'string') {\n      this.depth--;\n      if (val.length > 0) {\n        this.push(JSON.stringify(val));\n        this.push('\\n');\n      }\n    } else if (Buffer.isBuffer(val)) {\n      this.depth--;\n      if (val.length > 0) {\n        this.push(val.toString('hex'));\n        this.push('\\n');\n      }\n    } else if (val instanceof bignumber) {\n      this.push(val.toString());\n      this.push('\\n');\n    } else {\n      this.push(util.inspect(val));\n      this.push('\\n');\n    }\n    switch (ai) {\n      case NUMBYTES.ONE:\n      case NUMBYTES.TWO:\n      case NUMBYTES.FOUR:\n      case NUMBYTES.EIGHT:\n        this.depth--;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _on_data() {\n    this.push('0x');\n    this.push(this.all.read().toString('hex'));\n    return this.push('\\n');\n  }\n}\nmodule.exports = Commented;","map":{"version":3,"names":["stream","require","util","utils","Simple","Decoder","constants","bignumber","BigNumber","NoFilter","MT","NUMBYTES","SYMS","plural","c","Commented","Transform","constructor","options","opts","Object","assign","depth","max_depth","no_summary","readableObjectMode","writableObjectMode","all","tags","_tag_24","bind","parser","on","_on_value","_on_start","_on_start_string","_on_stop","_on_more","_on_error","_on_data","bs","_on_read","v","b","push","er","emit","end","_transform","fresh","encoding","cb","write","_flush","comment","input","Error","ref1","ref2","d","p","toString","Promise","resolve","reject","pipe","buf","hex","Array","join","ind","length","mt","len","parent_mt","pos","desc","POS_INT","NEG_INT","ARRAY","MAP","BYTE_STRING","UTF8_STRING","SIMPLE_FLOAT","tag","BREAK","Math","floor","TAG","STREAM","val","ai","NULL","UNDEFINED","JSON","stringify","Buffer","isBuffer","inspect","ONE","TWO","FOUR","EIGHT","read","module","exports"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/cbor/lib/commented.js"],"sourcesContent":["'use strict'\n\nconst stream = require('stream')\nconst util = require('util')\nconst utils = require('./utils')\nconst Simple = require('./simple')\nconst Decoder = require('./decoder')\nconst constants = require('./constants')\nconst bignumber = require('bignumber.js').BigNumber\nconst NoFilter = require('nofilter')\n\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SYMS = constants.SYMS\n\nfunction plural(c) {\n  if (c > 1) {\n    return 's'\n  } else {\n    return ''\n  }\n}\n\n/**\n * Generate the expanded format of RFC 7049, section 2.2.1\n *\n * @extends {stream.Transform}\n */\nclass Commented extends stream.Transform {\n  /**\n   * Create a CBOR commenter.\n   *\n   * @param {object} [options={}] - Stream options\n   * @param {number} [options.max_depth=10] - how many times to indent\n   *   the dashes\n   * @param {number} [options.depth=1] - initial indentation depth\n   * @param {boolean} [options.no_summary=false] - if true, omit the summary\n   *   of the full bytes read at the end\n   */\n  constructor(options) {\n    const opts = Object.assign({\n      depth: 1,\n      max_depth: 10,\n      no_summary: false\n    }, options, {\n      readableObjectMode: false,\n      writableObjectMode: false\n    })\n    const max_depth = opts.max_depth\n    delete opts.max_depth\n    const depth = opts.depth\n    delete opts.depth\n    super(opts)\n\n    this.depth = depth\n    this.max_depth = max_depth\n    this.all = new NoFilter()\n\n    opts.tags = {\n      24: this._tag_24.bind(this)\n    }\n    this.parser = new Decoder(opts)\n    this.parser.on('value', this._on_value.bind(this))\n    this.parser.on('start', this._on_start.bind(this))\n    this.parser.on('start-string', this._on_start_string.bind(this))\n    this.parser.on('stop', this._on_stop.bind(this))\n    this.parser.on('more-bytes', this._on_more.bind(this))\n    this.parser.on('error', this._on_error.bind(this))\n    if (!opts.no_summary) {\n      this.parser.on('data', this._on_data.bind(this))\n    }\n    this.parser.bs.on('read', this._on_read.bind(this))\n  }\n\n  /**\n   * @private\n   */\n  _tag_24(v) {\n    const c = new Commented({depth: this.depth+1, no_summary: true})\n    c.on('data', b => this.push(b))\n    c.on('error', er => this.emit('error', er))\n    c.end(v)\n  }\n\n  _transform(fresh, encoding, cb) {\n    this.parser.write(fresh, encoding, cb)\n  }\n\n  /**\n   * @private\n   */\n  _flush(cb) {\n    // TODO: find the test that covers this, and look at the return value\n    return this.parser._flush(cb)\n  }\n\n  /**\n   * @callback commentCallback\n   * @param {Error} [error] - if one was generated\n   * @param {string} [commented] - the comment string\n   */\n\n  /**\n   * @typedef CommentOptions\n   * @property {number} [max_depth=10] how many times to indent the dashes\n   * @property {string} [encoding='hex'] encoding of the input\n   */\n  /**\n   * Comment on an input Buffer or string, creating a string passed to the\n   * callback.  If callback not specified, a promise is returned.\n   *\n   * @static\n   * @param {string|Buffer} input\n   * @param {CommentOptions|commentCallback|string} [options] or callback\n   * @param {commentCallback=} cb\n   * @returns {Promise} if cb not specified\n   */\n  static comment(input, options, cb) {\n    if (input == null) {\n      throw new Error('input required')\n    }\n    let encoding = (typeof input === 'string') ? 'hex' : void 0\n    let max_depth = 10\n    switch (typeof options) {\n      case 'function':\n        cb = options\n        break\n      case 'string':\n        encoding = options\n        break\n      case 'number':\n        max_depth = options\n        break\n      case 'object':\n        const ref1 = options.encoding\n        const ref2 = options.max_depth\n        encoding = (ref1 != null) ? ref1 : encoding\n        max_depth = (ref2 != null) ? ref2 : max_depth\n        break\n      case 'undefined':\n        break\n      default:\n        throw new Error('Unknown option type')\n    }\n    const bs = new NoFilter()\n    const d = new Commented({\n      max_depth\n    })\n    let p = null\n    if (typeof cb === 'function') {\n      d.on('end', () => {\n        cb(null, bs.toString('utf8'))\n      })\n      d.on('error', cb)\n    } else {\n      p = new Promise((resolve, reject) => {\n        d.on('end', () => {\n          resolve(bs.toString('utf8'))\n        })\n        return d.on('error', reject)\n      })\n    }\n    d.pipe(bs)\n    d.end(input, encoding)\n    return p\n  }\n\n  /**\n   * @private\n   */\n  _on_error(er) {\n    this.push('ERROR: ')\n    this.push(er.toString())\n    this.push('\\n')\n  }\n\n  /**\n   * @private\n   */\n  _on_read(buf) {\n    this.all.write(buf)\n    const hex = buf.toString('hex')\n    this.push(new Array(this.depth + 1).join('  '))\n    this.push(hex)\n    let ind = (this.max_depth - this.depth) * 2\n    ind -= hex.length\n    if (ind < 1) {\n      ind = 1\n    }\n    this.push(new Array(ind + 1).join(' '))\n    return this.push('-- ')\n  }\n\n  /**\n   * @private\n   */\n  _on_more(mt, len, parent_mt, pos) {\n    this.depth++\n    let desc = ''\n    switch (mt) {\n      case MT.POS_INT:\n        desc = 'Positive number,'\n        break\n      case MT.NEG_INT:\n        desc = 'Negative number,'\n        break\n      case MT.ARRAY:\n        desc = 'Array, length'\n        break\n      case MT.MAP:\n        desc = 'Map, count'\n        break\n      case MT.BYTE_STRING:\n        desc = 'Bytes, length'\n        break\n      case MT.UTF8_STRING:\n        desc = 'String, length'\n        break\n      case MT.SIMPLE_FLOAT:\n        if (len === 1) {\n          desc = 'Simple value,'\n        } else {\n          desc = 'Float,'\n        }\n        break\n    }\n    return this.push(desc + ' next ' + len + ' byte' + (plural(len)) + '\\n')\n  }\n\n  /**\n   * @private\n   */\n  _on_start_string(mt, tag, parent_mt, pos) {\n    this.depth++\n    let desc = ''\n    switch (mt) {\n      case MT.BYTE_STRING:\n        desc = 'Bytes, length: ' + tag\n        break\n      case MT.UTF8_STRING:\n        desc = 'String, length: ' + (tag.toString())\n        break\n    }\n    return this.push(desc + '\\n')\n  }\n\n  /**\n   * @private\n   */\n  _on_start(mt, tag, parent_mt, pos) {\n    this.depth++\n    if (tag !== SYMS.BREAK) {\n      switch (parent_mt) {\n        case MT.ARRAY:\n          this.push(`[${pos}], `)\n          break\n        case MT.MAP:\n          if (pos % 2) {\n            this.push(`{Val:${Math.floor(pos / 2)}}, `)\n          } else {\n            this.push(`{Key:${Math.floor(pos / 2)}}, `)\n          }\n          break\n      }\n    }\n    switch (mt) {\n      case MT.TAG:\n        this.push(`Tag #${tag}`)\n        if (tag == 24) {\n          this.push(' Encoded CBOR data item')\n        }\n        break\n      case MT.ARRAY:\n        if (tag === SYMS.STREAM) {\n          this.push('Array (streaming)')\n        } else {\n          this.push(`Array, ${tag} item${plural(tag)}`)\n        }\n        break\n      case MT.MAP:\n        if (tag === SYMS.STREAM) {\n          this.push('Map (streaming)')\n        } else {\n          this.push(`Map, ${tag} pair${plural(tag)}`)\n        }\n        break\n      case MT.BYTE_STRING:\n        this.push('Bytes (streaming)')\n        break\n      case MT.UTF8_STRING:\n        this.push('String (streaming)')\n        break\n    }\n    return this.push('\\n')\n  }\n\n  /**\n   * @private\n   */\n  _on_stop(mt) {\n    return this.depth--\n  }\n\n  /**\n   * @private\n   */\n  _on_value(val, parent_mt, pos, ai) {\n    if (val !== SYMS.BREAK) {\n      switch (parent_mt) {\n        case MT.ARRAY:\n          this.push(`[${pos}], `)\n          break\n        case MT.MAP:\n          if (pos % 2) {\n            this.push(`{Val:${Math.floor(pos / 2)}}, `)\n          } else {\n            this.push(`{Key:${Math.floor(pos / 2)}}, `)\n          }\n          break\n      }\n    }\n\n    if (val === SYMS.BREAK) {\n      this.push('BREAK\\n')\n    } else if (val === SYMS.NULL) {\n      this.push('null\\n')\n    } else if (val === SYMS.UNDEFINED) {\n      this.push('undefined\\n')\n    } else if (typeof val === 'string') {\n      this.depth--\n      if (val.length > 0 ) {\n        this.push(JSON.stringify(val))\n        this.push('\\n')\n      }\n    } else if (Buffer.isBuffer(val)) {\n      this.depth--\n      if (val.length > 0) {\n        this.push(val.toString('hex'))\n        this.push('\\n')\n      }\n    } else if (val instanceof bignumber) {\n      this.push(val.toString())\n      this.push('\\n')\n    } else {\n      this.push(util.inspect(val))\n      this.push('\\n')\n    }\n\n    switch (ai) {\n      case NUMBYTES.ONE:\n      case NUMBYTES.TWO:\n      case NUMBYTES.FOUR:\n      case NUMBYTES.EIGHT:\n        this.depth--\n    }\n  }\n\n  /**\n   * @private\n   */\n  _on_data() {\n    this.push('0x')\n    this.push(this.all.read().toString('hex'))\n    return this.push('\\n')\n  }\n}\n\nmodule.exports = Commented\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMG,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMI,OAAO,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMK,SAAS,GAAGL,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMM,SAAS,GAAGN,OAAO,CAAC,cAAc,CAAC,CAACO,SAAS;AACnD,MAAMC,QAAQ,GAAGR,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMS,EAAE,GAAGJ,SAAS,CAACI,EAAE;AACvB,MAAMC,QAAQ,GAAGL,SAAS,CAACK,QAAQ;AACnC,MAAMC,IAAI,GAAGN,SAAS,CAACM,IAAI;AAE3B,SAASC,MAAM,CAACC,CAAC,EAAE;EACjB,IAAIA,CAAC,GAAG,CAAC,EAAE;IACT,OAAO,GAAG;EACZ,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASf,MAAM,CAACgB,SAAS,CAAC;EACvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,OAAO,EAAE;IACnB,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC;MACzBC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE;IACd,CAAC,EAAEN,OAAO,EAAE;MACVO,kBAAkB,EAAE,KAAK;MACzBC,kBAAkB,EAAE;IACtB,CAAC,CAAC;IACF,MAAMH,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAChC,OAAOJ,IAAI,CAACI,SAAS;IACrB,MAAMD,KAAK,GAAGH,IAAI,CAACG,KAAK;IACxB,OAAOH,IAAI,CAACG,KAAK;IACjB,KAAK,CAACH,IAAI,CAAC;IAEX,IAAI,CAACG,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACI,GAAG,GAAG,IAAIlB,QAAQ,EAAE;IAEzBU,IAAI,CAACS,IAAI,GAAG;MACV,EAAE,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI;IAC5B,CAAC;IACD,IAAI,CAACC,MAAM,GAAG,IAAI1B,OAAO,CAACc,IAAI,CAAC;IAC/B,IAAI,CAACY,MAAM,CAACC,EAAE,CAAC,OAAO,EAAE,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,OAAO,EAAE,IAAI,CAACE,SAAS,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,cAAc,EAAE,IAAI,CAACG,gBAAgB,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,MAAM,EAAE,IAAI,CAACI,QAAQ,CAACN,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,IAAI,CAACK,QAAQ,CAACP,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,OAAO,EAAE,IAAI,CAACM,SAAS,CAACR,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,CAACX,IAAI,CAACK,UAAU,EAAE;MACpB,IAAI,CAACO,MAAM,CAACC,EAAE,CAAC,MAAM,EAAE,IAAI,CAACO,QAAQ,CAACT,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD;IACA,IAAI,CAACC,MAAM,CAACS,EAAE,CAACR,EAAE,CAAC,MAAM,EAAE,IAAI,CAACS,QAAQ,CAACX,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD;;EAEA;AACF;AACA;EACED,OAAO,CAACa,CAAC,EAAE;IACT,MAAM5B,CAAC,GAAG,IAAIC,SAAS,CAAC;MAACO,KAAK,EAAE,IAAI,CAACA,KAAK,GAAC,CAAC;MAAEE,UAAU,EAAE;IAAI,CAAC,CAAC;IAChEV,CAAC,CAACkB,EAAE,CAAC,MAAM,EAAEW,CAAC,IAAI,IAAI,CAACC,IAAI,CAACD,CAAC,CAAC,CAAC;IAC/B7B,CAAC,CAACkB,EAAE,CAAC,OAAO,EAAEa,EAAE,IAAI,IAAI,CAACC,IAAI,CAAC,OAAO,EAAED,EAAE,CAAC,CAAC;IAC3C/B,CAAC,CAACiC,GAAG,CAACL,CAAC,CAAC;EACV;EAEAM,UAAU,CAACC,KAAK,EAAEC,QAAQ,EAAEC,EAAE,EAAE;IAC9B,IAAI,CAACpB,MAAM,CAACqB,KAAK,CAACH,KAAK,EAAEC,QAAQ,EAAEC,EAAE,CAAC;EACxC;;EAEA;AACF;AACA;EACEE,MAAM,CAACF,EAAE,EAAE;IACT;IACA,OAAO,IAAI,CAACpB,MAAM,CAACsB,MAAM,CAACF,EAAE,CAAC;EAC/B;;EAEA;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOG,OAAO,CAACC,KAAK,EAAErC,OAAO,EAAEiC,EAAE,EAAE;IACjC,IAAII,KAAK,IAAI,IAAI,EAAE;MACjB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACnC;IACA,IAAIN,QAAQ,GAAI,OAAOK,KAAK,KAAK,QAAQ,GAAI,KAAK,GAAG,KAAK,CAAC;IAC3D,IAAIhC,SAAS,GAAG,EAAE;IAClB,QAAQ,OAAOL,OAAO;MACpB,KAAK,UAAU;QACbiC,EAAE,GAAGjC,OAAO;QACZ;MACF,KAAK,QAAQ;QACXgC,QAAQ,GAAGhC,OAAO;QAClB;MACF,KAAK,QAAQ;QACXK,SAAS,GAAGL,OAAO;QACnB;MACF,KAAK,QAAQ;QACX,MAAMuC,IAAI,GAAGvC,OAAO,CAACgC,QAAQ;QAC7B,MAAMQ,IAAI,GAAGxC,OAAO,CAACK,SAAS;QAC9B2B,QAAQ,GAAIO,IAAI,IAAI,IAAI,GAAIA,IAAI,GAAGP,QAAQ;QAC3C3B,SAAS,GAAImC,IAAI,IAAI,IAAI,GAAIA,IAAI,GAAGnC,SAAS;QAC7C;MACF,KAAK,WAAW;QACd;MACF;QACE,MAAM,IAAIiC,KAAK,CAAC,qBAAqB,CAAC;IAAA;IAE1C,MAAMhB,EAAE,GAAG,IAAI/B,QAAQ,EAAE;IACzB,MAAMkD,CAAC,GAAG,IAAI5C,SAAS,CAAC;MACtBQ;IACF,CAAC,CAAC;IACF,IAAIqC,CAAC,GAAG,IAAI;IACZ,IAAI,OAAOT,EAAE,KAAK,UAAU,EAAE;MAC5BQ,CAAC,CAAC3B,EAAE,CAAC,KAAK,EAAE,MAAM;QAChBmB,EAAE,CAAC,IAAI,EAAEX,EAAE,CAACqB,QAAQ,CAAC,MAAM,CAAC,CAAC;MAC/B,CAAC,CAAC;MACFF,CAAC,CAAC3B,EAAE,CAAC,OAAO,EAAEmB,EAAE,CAAC;IACnB,CAAC,MAAM;MACLS,CAAC,GAAG,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACnCL,CAAC,CAAC3B,EAAE,CAAC,KAAK,EAAE,MAAM;UAChB+B,OAAO,CAACvB,EAAE,CAACqB,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC;QACF,OAAOF,CAAC,CAAC3B,EAAE,CAAC,OAAO,EAAEgC,MAAM,CAAC;MAC9B,CAAC,CAAC;IACJ;IACAL,CAAC,CAACM,IAAI,CAACzB,EAAE,CAAC;IACVmB,CAAC,CAACZ,GAAG,CAACQ,KAAK,EAAEL,QAAQ,CAAC;IACtB,OAAOU,CAAC;EACV;;EAEA;AACF;AACA;EACEtB,SAAS,CAACO,EAAE,EAAE;IACZ,IAAI,CAACD,IAAI,CAAC,SAAS,CAAC;IACpB,IAAI,CAACA,IAAI,CAACC,EAAE,CAACgB,QAAQ,EAAE,CAAC;IACxB,IAAI,CAACjB,IAAI,CAAC,IAAI,CAAC;EACjB;;EAEA;AACF;AACA;EACEH,QAAQ,CAACyB,GAAG,EAAE;IACZ,IAAI,CAACvC,GAAG,CAACyB,KAAK,CAACc,GAAG,CAAC;IACnB,MAAMC,GAAG,GAAGD,GAAG,CAACL,QAAQ,CAAC,KAAK,CAAC;IAC/B,IAAI,CAACjB,IAAI,CAAC,IAAIwB,KAAK,CAAC,IAAI,CAAC9C,KAAK,GAAG,CAAC,CAAC,CAAC+C,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,IAAI,CAACzB,IAAI,CAACuB,GAAG,CAAC;IACd,IAAIG,GAAG,GAAG,CAAC,IAAI,CAAC/C,SAAS,GAAG,IAAI,CAACD,KAAK,IAAI,CAAC;IAC3CgD,GAAG,IAAIH,GAAG,CAACI,MAAM;IACjB,IAAID,GAAG,GAAG,CAAC,EAAE;MACXA,GAAG,GAAG,CAAC;IACT;IACA,IAAI,CAAC1B,IAAI,CAAC,IAAIwB,KAAK,CAACE,GAAG,GAAG,CAAC,CAAC,CAACD,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,OAAO,IAAI,CAACzB,IAAI,CAAC,KAAK,CAAC;EACzB;;EAEA;AACF;AACA;EACEP,QAAQ,CAACmC,EAAE,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,EAAE;IAChC,IAAI,CAACrD,KAAK,EAAE;IACZ,IAAIsD,IAAI,GAAG,EAAE;IACb,QAAQJ,EAAE;MACR,KAAK9D,EAAE,CAACmE,OAAO;QACbD,IAAI,GAAG,kBAAkB;QACzB;MACF,KAAKlE,EAAE,CAACoE,OAAO;QACbF,IAAI,GAAG,kBAAkB;QACzB;MACF,KAAKlE,EAAE,CAACqE,KAAK;QACXH,IAAI,GAAG,eAAe;QACtB;MACF,KAAKlE,EAAE,CAACsE,GAAG;QACTJ,IAAI,GAAG,YAAY;QACnB;MACF,KAAKlE,EAAE,CAACuE,WAAW;QACjBL,IAAI,GAAG,eAAe;QACtB;MACF,KAAKlE,EAAE,CAACwE,WAAW;QACjBN,IAAI,GAAG,gBAAgB;QACvB;MACF,KAAKlE,EAAE,CAACyE,YAAY;QAClB,IAAIV,GAAG,KAAK,CAAC,EAAE;UACbG,IAAI,GAAG,eAAe;QACxB,CAAC,MAAM;UACLA,IAAI,GAAG,QAAQ;QACjB;QACA;IAAK;IAET,OAAO,IAAI,CAAChC,IAAI,CAACgC,IAAI,GAAG,QAAQ,GAAGH,GAAG,GAAG,OAAO,GAAI5D,MAAM,CAAC4D,GAAG,CAAE,GAAG,IAAI,CAAC;EAC1E;;EAEA;AACF;AACA;EACEtC,gBAAgB,CAACqC,EAAE,EAAEY,GAAG,EAAEV,SAAS,EAAEC,GAAG,EAAE;IACxC,IAAI,CAACrD,KAAK,EAAE;IACZ,IAAIsD,IAAI,GAAG,EAAE;IACb,QAAQJ,EAAE;MACR,KAAK9D,EAAE,CAACuE,WAAW;QACjBL,IAAI,GAAG,iBAAiB,GAAGQ,GAAG;QAC9B;MACF,KAAK1E,EAAE,CAACwE,WAAW;QACjBN,IAAI,GAAG,kBAAkB,GAAIQ,GAAG,CAACvB,QAAQ,EAAG;QAC5C;IAAK;IAET,OAAO,IAAI,CAACjB,IAAI,CAACgC,IAAI,GAAG,IAAI,CAAC;EAC/B;;EAEA;AACF;AACA;EACE1C,SAAS,CAACsC,EAAE,EAAEY,GAAG,EAAEV,SAAS,EAAEC,GAAG,EAAE;IACjC,IAAI,CAACrD,KAAK,EAAE;IACZ,IAAI8D,GAAG,KAAKxE,IAAI,CAACyE,KAAK,EAAE;MACtB,QAAQX,SAAS;QACf,KAAKhE,EAAE,CAACqE,KAAK;UACX,IAAI,CAACnC,IAAI,CAAE,IAAG+B,GAAI,KAAI,CAAC;UACvB;QACF,KAAKjE,EAAE,CAACsE,GAAG;UACT,IAAIL,GAAG,GAAG,CAAC,EAAE;YACX,IAAI,CAAC/B,IAAI,CAAE,QAAO0C,IAAI,CAACC,KAAK,CAACZ,GAAG,GAAG,CAAC,CAAE,KAAI,CAAC;UAC7C,CAAC,MAAM;YACL,IAAI,CAAC/B,IAAI,CAAE,QAAO0C,IAAI,CAACC,KAAK,CAACZ,GAAG,GAAG,CAAC,CAAE,KAAI,CAAC;UAC7C;UACA;MAAK;IAEX;IACA,QAAQH,EAAE;MACR,KAAK9D,EAAE,CAAC8E,GAAG;QACT,IAAI,CAAC5C,IAAI,CAAE,QAAOwC,GAAI,EAAC,CAAC;QACxB,IAAIA,GAAG,IAAI,EAAE,EAAE;UACb,IAAI,CAACxC,IAAI,CAAC,yBAAyB,CAAC;QACtC;QACA;MACF,KAAKlC,EAAE,CAACqE,KAAK;QACX,IAAIK,GAAG,KAAKxE,IAAI,CAAC6E,MAAM,EAAE;UACvB,IAAI,CAAC7C,IAAI,CAAC,mBAAmB,CAAC;QAChC,CAAC,MAAM;UACL,IAAI,CAACA,IAAI,CAAE,UAASwC,GAAI,QAAOvE,MAAM,CAACuE,GAAG,CAAE,EAAC,CAAC;QAC/C;QACA;MACF,KAAK1E,EAAE,CAACsE,GAAG;QACT,IAAII,GAAG,KAAKxE,IAAI,CAAC6E,MAAM,EAAE;UACvB,IAAI,CAAC7C,IAAI,CAAC,iBAAiB,CAAC;QAC9B,CAAC,MAAM;UACL,IAAI,CAACA,IAAI,CAAE,QAAOwC,GAAI,QAAOvE,MAAM,CAACuE,GAAG,CAAE,EAAC,CAAC;QAC7C;QACA;MACF,KAAK1E,EAAE,CAACuE,WAAW;QACjB,IAAI,CAACrC,IAAI,CAAC,mBAAmB,CAAC;QAC9B;MACF,KAAKlC,EAAE,CAACwE,WAAW;QACjB,IAAI,CAACtC,IAAI,CAAC,oBAAoB,CAAC;QAC/B;IAAK;IAET,OAAO,IAAI,CAACA,IAAI,CAAC,IAAI,CAAC;EACxB;;EAEA;AACF;AACA;EACER,QAAQ,CAACoC,EAAE,EAAE;IACX,OAAO,IAAI,CAAClD,KAAK,EAAE;EACrB;;EAEA;AACF;AACA;EACEW,SAAS,CAACyD,GAAG,EAAEhB,SAAS,EAAEC,GAAG,EAAEgB,EAAE,EAAE;IACjC,IAAID,GAAG,KAAK9E,IAAI,CAACyE,KAAK,EAAE;MACtB,QAAQX,SAAS;QACf,KAAKhE,EAAE,CAACqE,KAAK;UACX,IAAI,CAACnC,IAAI,CAAE,IAAG+B,GAAI,KAAI,CAAC;UACvB;QACF,KAAKjE,EAAE,CAACsE,GAAG;UACT,IAAIL,GAAG,GAAG,CAAC,EAAE;YACX,IAAI,CAAC/B,IAAI,CAAE,QAAO0C,IAAI,CAACC,KAAK,CAACZ,GAAG,GAAG,CAAC,CAAE,KAAI,CAAC;UAC7C,CAAC,MAAM;YACL,IAAI,CAAC/B,IAAI,CAAE,QAAO0C,IAAI,CAACC,KAAK,CAACZ,GAAG,GAAG,CAAC,CAAE,KAAI,CAAC;UAC7C;UACA;MAAK;IAEX;IAEA,IAAIe,GAAG,KAAK9E,IAAI,CAACyE,KAAK,EAAE;MACtB,IAAI,CAACzC,IAAI,CAAC,SAAS,CAAC;IACtB,CAAC,MAAM,IAAI8C,GAAG,KAAK9E,IAAI,CAACgF,IAAI,EAAE;MAC5B,IAAI,CAAChD,IAAI,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM,IAAI8C,GAAG,KAAK9E,IAAI,CAACiF,SAAS,EAAE;MACjC,IAAI,CAACjD,IAAI,CAAC,aAAa,CAAC;IAC1B,CAAC,MAAM,IAAI,OAAO8C,GAAG,KAAK,QAAQ,EAAE;MAClC,IAAI,CAACpE,KAAK,EAAE;MACZ,IAAIoE,GAAG,CAACnB,MAAM,GAAG,CAAC,EAAG;QACnB,IAAI,CAAC3B,IAAI,CAACkD,IAAI,CAACC,SAAS,CAACL,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC9C,IAAI,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,MAAM,IAAIoD,MAAM,CAACC,QAAQ,CAACP,GAAG,CAAC,EAAE;MAC/B,IAAI,CAACpE,KAAK,EAAE;MACZ,IAAIoE,GAAG,CAACnB,MAAM,GAAG,CAAC,EAAE;QAClB,IAAI,CAAC3B,IAAI,CAAC8C,GAAG,CAAC7B,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAACjB,IAAI,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,MAAM,IAAI8C,GAAG,YAAYnF,SAAS,EAAE;MACnC,IAAI,CAACqC,IAAI,CAAC8C,GAAG,CAAC7B,QAAQ,EAAE,CAAC;MACzB,IAAI,CAACjB,IAAI,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM;MACL,IAAI,CAACA,IAAI,CAAC1C,IAAI,CAACgG,OAAO,CAACR,GAAG,CAAC,CAAC;MAC5B,IAAI,CAAC9C,IAAI,CAAC,IAAI,CAAC;IACjB;IAEA,QAAQ+C,EAAE;MACR,KAAKhF,QAAQ,CAACwF,GAAG;MACjB,KAAKxF,QAAQ,CAACyF,GAAG;MACjB,KAAKzF,QAAQ,CAAC0F,IAAI;MAClB,KAAK1F,QAAQ,CAAC2F,KAAK;QACjB,IAAI,CAAChF,KAAK,EAAE;IAAA;EAElB;;EAEA;AACF;AACA;EACEiB,QAAQ,GAAG;IACT,IAAI,CAACK,IAAI,CAAC,IAAI,CAAC;IACf,IAAI,CAACA,IAAI,CAAC,IAAI,CAACjB,GAAG,CAAC4E,IAAI,EAAE,CAAC1C,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,OAAO,IAAI,CAACjB,IAAI,CAAC,IAAI,CAAC;EACxB;AACF;AAEA4D,MAAM,CAACC,OAAO,GAAG1F,SAAS"},"metadata":{},"sourceType":"script"}