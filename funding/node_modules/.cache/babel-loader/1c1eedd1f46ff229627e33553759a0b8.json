{"ast":null,"code":"import { nat } from './nat.js';\nimport { tuple } from './tuple.js';\nimport { tryParseStringifiedNat } from './_internals/mappers/NatToStringifiedNat.js';\nfunction dotJoinerMapper(data) {\n  return data.join('.');\n}\nfunction dotJoinerUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Invalid type');\n  }\n  return value.split('.').map(v => tryParseStringifiedNat(v, 10));\n}\nexport function ipV4() {\n  return tuple(nat(255), nat(255), nat(255), nat(255)).map(dotJoinerMapper, dotJoinerUnmapper);\n}","map":{"version":3,"names":["nat","tuple","tryParseStringifiedNat","dotJoinerMapper","data","join","dotJoinerUnmapper","value","Error","split","map","v","ipV4"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/ipV4.js"],"sourcesContent":["import { nat } from './nat.js';\nimport { tuple } from './tuple.js';\nimport { tryParseStringifiedNat } from './_internals/mappers/NatToStringifiedNat.js';\nfunction dotJoinerMapper(data) {\n    return data.join('.');\n}\nfunction dotJoinerUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Invalid type');\n    }\n    return value.split('.').map((v) => tryParseStringifiedNat(v, 10));\n}\nexport function ipV4() {\n    return tuple(nat(255), nat(255), nat(255), nat(255)).map(dotJoinerMapper, dotJoinerUnmapper);\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,sBAAsB,QAAQ,6CAA6C;AACpF,SAASC,eAAe,CAACC,IAAI,EAAE;EAC3B,OAAOA,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;AACzB;AACA,SAASC,iBAAiB,CAACC,KAAK,EAAE;EAC9B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACnC;EACA,OAAOD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKT,sBAAsB,CAACS,CAAC,EAAE,EAAE,CAAC,CAAC;AACrE;AACA,OAAO,SAASC,IAAI,GAAG;EACnB,OAAOX,KAAK,CAACD,GAAG,CAAC,GAAG,CAAC,EAAEA,GAAG,CAAC,GAAG,CAAC,EAAEA,GAAG,CAAC,GAAG,CAAC,EAAEA,GAAG,CAAC,GAAG,CAAC,CAAC,CAACU,GAAG,CAACP,eAAe,EAAEG,iBAAiB,CAAC;AAChG"},"metadata":{},"sourceType":"module"}