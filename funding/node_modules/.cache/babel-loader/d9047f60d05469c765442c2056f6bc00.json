{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Abi = exports.ConstructorEntry = exports.FallbackEntry = exports.ReceiveEntry = exports.FunctionEntry = exports.ErrorEntry = exports.EventEntry = exports.EventParameter = exports.Parameter = void 0;\nconst fc = __importStar(require(\"fast-check\"));\nconst change_case_1 = require(\"change-case\");\nconst wordLists_1 = __importDefault(require(\"./wordLists\"));\nconst Parameter = () => fc.tuple(fc.record({\n  name: ParameterName()\n}), TypeRecord()).map(_ref => {\n  let [{\n    name\n  }, type] = _ref;\n  return Object.assign({\n    name\n  }, type);\n});\nexports.Parameter = Parameter;\nconst EventParameter = () => fc.tuple(fc.record({\n  name: ParameterName(),\n  indexed: fc.boolean()\n}), TypeRecord()).map(_ref2 => {\n  let [{\n    name,\n    indexed\n  }, type] = _ref2;\n  return Object.assign({\n    name,\n    indexed\n  }, type);\n});\nexports.EventParameter = EventParameter;\nconst EventEntry = () => fc.record({\n  type: fc.constant(\"event\"),\n  name: EventName(),\n  inputs: fc.array((0, exports.EventParameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    if (inputs.filter(_ref3 => {\n      let {\n        indexed\n      } = _ref3;\n      return indexed;\n    }).length > 3) {\n      // only up to 3 params can be indexed\n      return false;\n    }\n    // names that are not blank should be unique\n    const names = inputs.map(_ref4 => {\n      let {\n        name\n      } = _ref4;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  }),\n  anonymous: fc.boolean()\n});\nexports.EventEntry = EventEntry;\nconst ErrorEntry = () => fc.record({\n  type: fc.constant(\"error\"),\n  name: ErrorName(),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    // names that are not blank should be unique\n    const names = inputs.map(_ref5 => {\n      let {\n        name\n      } = _ref5;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n});\nexports.ErrorEntry = ErrorEntry;\nconst FunctionEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"function\")\n}, {\n  withDeletedKeys: true\n}), fc.record({\n  name: FunctionName(),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  })\n}), fc.record({\n  outputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  })\n}, {\n  withDeletedKeys: true\n}), fc.tuple(fc.oneof(fc.constant(\"pure\"), fc.constant(\"view\"), fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref6 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref6;\n  const payable = stateMutability === \"payable\";\n  const constant = stateMutability === \"view\" || stateMutability === \"pure\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable,\n    constant\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(records => records.reduce((a, b) => Object.assign(Object.assign({}, a), b), {})).filter(entry => {\n  const {\n    inputs,\n    outputs = []\n  } = entry;\n  // names that are not blank should be unique\n  const names = [...inputs, ...outputs].map(_ref7 => {\n    let {\n      name\n    } = _ref7;\n    return name;\n  }).filter(name => name !== \"\");\n  return names.length === new Set(names).size;\n});\nexports.FunctionEntry = FunctionEntry;\nconst ReceiveEntry = () => fc.record({\n  type: fc.constant(\"receive\"),\n  stateMutability: fc.constant(\"payable\")\n});\nexports.ReceiveEntry = ReceiveEntry;\nconst FallbackEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"fallback\")\n}), fc.tuple(fc.oneof(fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref8 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref8;\n  const payable = stateMutability === \"payable\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(_ref9 => {\n  let [{\n    type\n  }, mutabilityFields] = _ref9;\n  return Object.assign({\n    type\n  }, mutabilityFields);\n});\nexports.FallbackEntry = FallbackEntry;\nconst ConstructorEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"constructor\"),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    // names that are not blank should be unique\n    const names = inputs.map(_ref10 => {\n      let {\n        name\n      } = _ref10;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n}), fc.tuple(fc.oneof(fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref11 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref11;\n  const payable = stateMutability === \"payable\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(_ref12 => {\n  let [{\n    type,\n    inputs\n  }, mutabilityFields] = _ref12;\n  return Object.assign({\n    type,\n    inputs\n  }, mutabilityFields);\n});\nexports.ConstructorEntry = ConstructorEntry;\nconst Abi = () => fc.tuple((0, exports.ConstructorEntry)(), (0, exports.FallbackEntry)(), (0, exports.ReceiveEntry)(), fc.array(fc.oneof((0, exports.FunctionEntry)(), (0, exports.EventEntry)(), (0, exports.ErrorEntry)()))).chain(_ref13 => {\n  let [constructor, fallback, receive, entries] = _ref13;\n  return fc.shuffledSubarray([constructor, fallback, receive, ...entries]);\n});\nexports.Abi = Abi;\nvar Numerics;\n(function (Numerics) {\n  // 0 < n <= 32\n  // use subtraction so that fast-check treats 32 as simpler than 1\n  Numerics.Bytes = () => fc.nat(31).map(k => 32 - k);\n  // 0 < n <= 256, 8 | n\n  Numerics.Bits = () => Numerics.Bytes().map(k => 8 * k);\n  // 0 < n <= 80\n  // use fancy math so that fast-check treats 18 as the simplest case\n  //\n  //     0 ----------------- 79\n  //     lines up as:\n  //     18 ------ 80, 0 --- 17\n  Numerics.DecimalPlaces = () => fc.nat(79).map(k => (k + 17) % 80 + 1);\n  Numerics.Precision = () => fc.tuple(Numerics.Bits(), Numerics.DecimalPlaces());\n})(Numerics || (Numerics = {}));\nvar Primitives;\n(function (Primitives) {\n  Primitives.Uint = () => Numerics.Bits().map(m => `uint${m}`);\n  Primitives.Int = () => Numerics.Bits().map(m => `int${m}`);\n  Primitives.Address = () => fc.constant(\"address\");\n  Primitives.Bool = () => fc.constant(\"bool\");\n  Primitives.Fixed = () => Numerics.Precision().map(_ref14 => {\n    let [m, n] = _ref14;\n    return `fixed${m}x${n}`;\n  });\n  Primitives.Ufixed = () => Numerics.Precision().map(_ref15 => {\n    let [m, n] = _ref15;\n    return `ufixed${m}x${n}`;\n  });\n  Primitives.BytesM = () => Numerics.Bytes().map(m => `bytes${m}`);\n  Primitives.Function = () => fc.constant(\"function\");\n  Primitives.Bytes = () => fc.constant(\"bytes\");\n  Primitives.String = () => fc.constant(\"string\");\n  Primitives.Tuple = () => fc.constant(\"tuple\");\n})(Primitives || (Primitives = {}));\nconst Primitive = () => fc.oneof(Primitives.Uint(), Primitives.Int(), Primitives.Address(), Primitives.Bool(), Primitives.Fixed(), Primitives.Ufixed(), Primitives.BytesM(), Primitives.Function(), Primitives.Bytes(), Primitives.String(), Primitives.Tuple());\nconst Type = fc.memo(n => n === 0 ? Primitive() :\n// we cap this at 3 so that fast-check doesn't blow the stack\nfc.oneof(Primitive(), ArrayFixed(n > 3 ? 3 : n), ArrayDynamic(n)));\nconst ArrayFixed = fc.memo(n => fc.tuple(Type(n - 1), fc.integer({\n  min: 1,\n  max: 256\n})).map(_ref16 => {\n  let [type, length] = _ref16;\n  return `${type}[${length}]`;\n}));\nconst ArrayDynamic = fc.memo(n => Type(n - 1).map(type => `${type}[]`));\nconst reservedWords = new Set([\"Error\", \"Panic\", \"_\", \"abi\", \"abstract\", \"addmod\", \"address\", \"after\", \"alias\", \"anonymous\", \"apply\", \"as\", \"assembly\", \"assert\", \"auto\", \"block\", \"blockhash\", \"bool\", \"break\", \"byte\", \"bytes\", \"calldata\", \"case\", \"catch\", \"constant\", \"constructor\", \"continue\", \"contract\", \"copyof\", \"days\", \"default\", \"define\", \"delete\", \"ecrecover\", \"else\", \"emit\", \"enum\", \"error\", \"ether\", \"event\", \"external\", \"fallback\", \"false\", \"final\", \"finney\", \"fixed\", \"for\", \"from\", \"function\", \"gasleft\", \"gwei\", \"hours\", \"if\", \"immutable\", \"implements\", \"import\", \"in\", \"indexed\", \"inline\", \"int\", \"interface\", \"internal\", \"is\", \"keccak256\", \"let\", \"library\", \"log0\", \"log1\", \"log2\", \"log3\", \"log4\", \"macro\", \"mapping\", \"match\", \"memory\", \"minutes\", \"modifier\", \"msg\", \"mulmod\", \"mutable\", \"new\", \"now\", \"null\", \"of\", \"override\", \"partial\", \"payable\", \"pragma\", \"private\", \"promise\", \"public\", \"pure\", \"receive\", \"reference\", \"relocatable\", \"require\", \"return\", \"returns\", \"revert\", \"ripemd160\", \"sealed\", \"seconds\", \"selfdestruct\", \"sha256\", \"sha3\", \"sizeof\", \"static\", \"storage\", \"string\", \"struct\", \"suicide\", \"super\", \"supports\", \"switch\", \"szabo\", \"this\", \"throw\", \"true\", \"try\", \"tx\", \"type\", \"typedef\", \"typeof\", \"ufixed\", \"uint\", \"unchecked\", \"using\", \"var\", \"view\", \"virtual\", \"weeks\", \"wei\", \"while\", \"years\"]);\nconst Name = function () {\n  let wordTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [\"noun\"];\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : change_case_1.camelCase;\n  const wordArbitraries = wordTypes.map(wordType => fc.constantFrom(...wordLists_1.default[wordType]));\n  const wordsArbitrary = fc.tuple(...wordArbitraries);\n  const nameArbitrary = wordsArbitrary.map(words => transform(words.join(\" \")));\n  return nameArbitrary.filter(word => !reservedWords.has(word));\n};\nconst ParameterName = () => fc.oneof({\n  arbitrary: Name([\"noun\"]),\n  weight: 9\n}, {\n  arbitrary: fc.constant(\"\"),\n  weight: 1\n});\nconst EventName = () => Name([\"verb\", \"noun\"], change_case_1.pascalCase);\nconst ErrorName = () => Name([\"noun\", \"noun\"], change_case_1.pascalCase);\nconst FunctionName = () => Name([\"verb\", \"noun\"]);\nconst TypeRecord = () => Type().chain(type => type.startsWith(\"tuple\") ? fc.record({\n  type: fc.constant(type),\n  components: fc.array((0, exports.Parameter)().filter(_ref17 => {\n    let {\n      name\n    } = _ref17;\n    return name !== \"\";\n  }), {\n    minLength: 1,\n    maxLength: 5\n  }).filter(items => {\n    const names = items.map(_ref18 => {\n      let {\n        name\n      } = _ref18;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n}) : fc.record({\n  type: fc.constant(type)\n}));","map":{"version":3,"mappings":"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","names":["Parameter","fc","tuple","record","name","ParameterName","TypeRecord","map","type","Object","exports","EventParameter","indexed","boolean","EventEntry","constant","EventName","inputs","array","maxLength","filter","length","names","Set","size","anonymous","ErrorEntry","ErrorName","FunctionEntry","withDeletedKeys","FunctionName","outputs","oneof","stateMutability","includeLegacy","includeModern","payable","modern","legacy","records","reduce","a","b","entry","ReceiveEntry","FallbackEntry","mutabilityFields","ConstructorEntry","Abi","chain","constructor","fallback","receive","entries","shuffledSubarray","Numerics","nat","k","Primitives","Bits","m","Precision","n","Bytes","Primitive","Uint","Int","Address","Bool","Fixed","Ufixed","BytesM","Function","String","Tuple","Type","memo","ArrayFixed","ArrayDynamic","integer","min","max","reservedWords","Name","wordTypes","transform","change_case_1","wordArbitraries","wordType","constantFrom","wordLists_1","wordsArbitrary","nameArbitrary","words","join","word","has","arbitrary","weight","startsWith","components","minLength","items"],"sourceRoot":"","sources":["../../lib/arbitrary.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}