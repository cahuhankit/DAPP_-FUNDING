{"ast":null,"code":"import { stream } from '../../../stream/Stream.js';\nexport function pathWalk(path, initialValues, shrink) {\n  let values = stream(initialValues);\n  const segments = path.split(':').map(text => +text);\n  if (segments.length === 0) return values;\n  if (!segments.every(v => !Number.isNaN(v))) {\n    throw new Error(`Unable to replay, got invalid path=${path}`);\n  }\n  values = values.drop(segments[0]);\n  for (const s of segments.slice(1)) {\n    const valueToShrink = values.getNthOrLast(0);\n    if (valueToShrink == null) {\n      throw new Error(`Unable to replay, got wrong path=${path}`);\n    }\n    values = shrink(valueToShrink).drop(s);\n  }\n  return values;\n}","map":{"version":3,"names":["stream","pathWalk","path","initialValues","shrink","values","segments","split","map","text","length","every","v","Number","isNaN","Error","drop","s","slice","valueToShrink","getNthOrLast"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/check/runner/utils/PathWalker.js"],"sourcesContent":["import { stream } from '../../../stream/Stream.js';\nexport function pathWalk(path, initialValues, shrink) {\n    let values = stream(initialValues);\n    const segments = path.split(':').map((text) => +text);\n    if (segments.length === 0)\n        return values;\n    if (!segments.every((v) => !Number.isNaN(v))) {\n        throw new Error(`Unable to replay, got invalid path=${path}`);\n    }\n    values = values.drop(segments[0]);\n    for (const s of segments.slice(1)) {\n        const valueToShrink = values.getNthOrLast(0);\n        if (valueToShrink == null) {\n            throw new Error(`Unable to replay, got wrong path=${path}`);\n        }\n        values = shrink(valueToShrink).drop(s);\n    }\n    return values;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,2BAA2B;AAClD,OAAO,SAASC,QAAQ,CAACC,IAAI,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAClD,IAAIC,MAAM,GAAGL,MAAM,CAACG,aAAa,CAAC;EAClC,MAAMG,QAAQ,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAC;EACrD,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EACrB,OAAOL,MAAM;EACjB,IAAI,CAACC,QAAQ,CAACK,KAAK,CAAEC,CAAC,IAAK,CAACC,MAAM,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC,EAAE;IAC1C,MAAM,IAAIG,KAAK,CAAE,sCAAqCb,IAAK,EAAC,CAAC;EACjE;EACAG,MAAM,GAAGA,MAAM,CAACW,IAAI,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjC,KAAK,MAAMW,CAAC,IAAIX,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/B,MAAMC,aAAa,GAAGd,MAAM,CAACe,YAAY,CAAC,CAAC,CAAC;IAC5C,IAAID,aAAa,IAAI,IAAI,EAAE;MACvB,MAAM,IAAIJ,KAAK,CAAE,oCAAmCb,IAAK,EAAC,CAAC;IAC/D;IACAG,MAAM,GAAGD,MAAM,CAACe,aAAa,CAAC,CAACH,IAAI,CAACC,CAAC,CAAC;EAC1C;EACA,OAAOZ,MAAM;AACjB"},"metadata":{},"sourceType":"module"}