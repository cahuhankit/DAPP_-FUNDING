{"ast":null,"code":"import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { integerLogLike, biasNumericRange } from './helpers/BiasNumericRange.js';\nimport { shrinkInteger } from './helpers/ShrinkInteger.js';\nexport class IntegerArbitrary extends Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value(mrng.nextInt(range.min, range.max), undefined);\n  }\n  canShrinkWithoutContext(value) {\n    return typeof value === 'number' && Number.isInteger(value) && !Object.is(value, -0) && this.min <= value && value <= this.max;\n  }\n  shrink(current, context) {\n    if (!IntegerArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return shrinkInteger(current, target, true);\n    }\n    if (this.isLastChanceTry(current, context)) {\n      return Stream.of(new Value(context, undefined));\n    }\n    return shrinkInteger(current, context, false);\n  }\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return 0;\n    }\n    return this.min < 0 ? this.max : this.min;\n  }\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n    const ranges = biasNumericRange(this.min, this.max, integerLogLike);\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + 1 && current > this.min;\n    if (current < 0) return current === context - 1 && current < this.max;\n    return false;\n  }\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n    if (typeof context !== 'number') {\n      throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n    }\n    if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n      throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["Arbitrary","Value","Stream","integerLogLike","biasNumericRange","shrinkInteger","IntegerArbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","nextInt","undefined","canShrinkWithoutContext","value","Number","isInteger","Object","is","shrink","current","context","isValidContext","target","defaultTarget","isLastChanceTry","of","ranges","length","id","Error","Math","sign"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/IntegerArbitrary.js"],"sourcesContent":["import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { integerLogLike, biasNumericRange } from './helpers/BiasNumericRange.js';\nimport { shrinkInteger } from './helpers/ShrinkInteger.js';\nexport class IntegerArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextInt(range.min, range.max), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return (typeof value === 'number' &&\n            Number.isInteger(value) &&\n            !Object.is(value, -0) &&\n            this.min <= value &&\n            value <= this.max);\n    }\n    shrink(current, context) {\n        if (!IntegerArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkInteger(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkInteger(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return 0;\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, integerLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + 1 && current > this.min;\n        if (current < 0)\n            return current === context - 1 && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'number') {\n            throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n        }\n        if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n            throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}