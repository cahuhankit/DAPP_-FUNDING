{"ast":null,"code":"import { array } from './array.js';\nimport { oneof } from './oneof.js';\nimport { hexaString } from './hexaString.js';\nimport { tuple } from './tuple.js';\nimport { ipV4 } from './ipV4.js';\nimport { fullySpecifiedMapper, fullySpecifiedUnmapper, onlyTrailingMapper, onlyTrailingUnmapper, multiTrailingMapper, multiTrailingUnmapper, multiTrailingMapperOne, multiTrailingUnmapperOne, singleTrailingMapper, singleTrailingUnmapper, noTrailingMapper, noTrailingUnmapper } from './_internals/mappers/EntitiesToIPv6.js';\nfunction h16sTol32Mapper(_ref) {\n  let [a, b] = _ref;\n  return `${a}:${b}`;\n}\nfunction h16sTol32Unmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  if (!value.includes(':')) throw new Error('Invalid value');\n  return value.split(':', 2);\n}\nexport function ipV6() {\n  const h16Arb = hexaString({\n    minLength: 1,\n    maxLength: 4,\n    size: 'max'\n  });\n  const ls32Arb = oneof(tuple(h16Arb, h16Arb).map(h16sTol32Mapper, h16sTol32Unmapper), ipV4());\n  return oneof(tuple(array(h16Arb, {\n    minLength: 6,\n    maxLength: 6,\n    size: 'max'\n  }), ls32Arb).map(fullySpecifiedMapper, fullySpecifiedUnmapper), tuple(array(h16Arb, {\n    minLength: 5,\n    maxLength: 5,\n    size: 'max'\n  }), ls32Arb).map(onlyTrailingMapper, onlyTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 1,\n    size: 'max'\n  }), array(h16Arb, {\n    minLength: 4,\n    maxLength: 4,\n    size: 'max'\n  }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 2,\n    size: 'max'\n  }), array(h16Arb, {\n    minLength: 3,\n    maxLength: 3,\n    size: 'max'\n  }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 3,\n    size: 'max'\n  }), array(h16Arb, {\n    minLength: 2,\n    maxLength: 2,\n    size: 'max'\n  }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 4,\n    size: 'max'\n  }), h16Arb, ls32Arb).map(multiTrailingMapperOne, multiTrailingUnmapperOne), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 5,\n    size: 'max'\n  }), ls32Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 6,\n    size: 'max'\n  }), h16Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, {\n    minLength: 0,\n    maxLength: 7,\n    size: 'max'\n  })).map(noTrailingMapper, noTrailingUnmapper));\n}","map":{"version":3,"names":["array","oneof","hexaString","tuple","ipV4","fullySpecifiedMapper","fullySpecifiedUnmapper","onlyTrailingMapper","onlyTrailingUnmapper","multiTrailingMapper","multiTrailingUnmapper","multiTrailingMapperOne","multiTrailingUnmapperOne","singleTrailingMapper","singleTrailingUnmapper","noTrailingMapper","noTrailingUnmapper","h16sTol32Mapper","a","b","h16sTol32Unmapper","value","Error","includes","split","ipV6","h16Arb","minLength","maxLength","size","ls32Arb","map"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/ipV6.js"],"sourcesContent":["import { array } from './array.js';\nimport { oneof } from './oneof.js';\nimport { hexaString } from './hexaString.js';\nimport { tuple } from './tuple.js';\nimport { ipV4 } from './ipV4.js';\nimport { fullySpecifiedMapper, fullySpecifiedUnmapper, onlyTrailingMapper, onlyTrailingUnmapper, multiTrailingMapper, multiTrailingUnmapper, multiTrailingMapperOne, multiTrailingUnmapperOne, singleTrailingMapper, singleTrailingUnmapper, noTrailingMapper, noTrailingUnmapper, } from './_internals/mappers/EntitiesToIPv6.js';\nfunction h16sTol32Mapper([a, b]) {\n    return `${a}:${b}`;\n}\nfunction h16sTol32Unmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.includes(':'))\n        throw new Error('Invalid value');\n    return value.split(':', 2);\n}\nexport function ipV6() {\n    const h16Arb = hexaString({ minLength: 1, maxLength: 4, size: 'max' });\n    const ls32Arb = oneof(tuple(h16Arb, h16Arb).map(h16sTol32Mapper, h16sTol32Unmapper), ipV4());\n    return oneof(tuple(array(h16Arb, { minLength: 6, maxLength: 6, size: 'max' }), ls32Arb).map(fullySpecifiedMapper, fullySpecifiedUnmapper), tuple(array(h16Arb, { minLength: 5, maxLength: 5, size: 'max' }), ls32Arb).map(onlyTrailingMapper, onlyTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 1, size: 'max' }), array(h16Arb, { minLength: 4, maxLength: 4, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 2, size: 'max' }), array(h16Arb, { minLength: 3, maxLength: 3, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 3, size: 'max' }), array(h16Arb, { minLength: 2, maxLength: 2, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 4, size: 'max' }), h16Arb, ls32Arb).map(multiTrailingMapperOne, multiTrailingUnmapperOne), tuple(array(h16Arb, { minLength: 0, maxLength: 5, size: 'max' }), ls32Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 6, size: 'max' }), h16Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 7, size: 'max' })).map(noTrailingMapper, noTrailingUnmapper));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}