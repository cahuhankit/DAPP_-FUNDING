{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3JsDefinition = void 0;\n// We simply return plain ol' Web3.js\nexports.Web3JsDefinition = {\n  initNetworkType(web3) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACaA,wBAAgB,GAAG;EACxBC,eAAe,CAACC,IAAc;yDAAG,CAAC;;CACzC","names":["exports","initNetworkType","web3"],"sourceRoot":"","sources":["../../../lib/shim/overloads/web3js.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}