{"ast":null,"code":"export const Zero64 = {\n  sign: 1,\n  data: [0, 0]\n};\nexport const Unit64 = {\n  sign: 1,\n  data: [0, 1]\n};\nexport function isZero64(a) {\n  return a.data[0] === 0 && a.data[1] === 0;\n}\nexport function isStrictlyNegative64(a) {\n  return a.sign === -1 && !isZero64(a);\n}\nexport function isStrictlyPositive64(a) {\n  return a.sign === 1 && !isZero64(a);\n}\nexport function isEqual64(a, b) {\n  if (a.data[0] === b.data[0] && a.data[1] === b.data[1]) {\n    return a.sign === b.sign || a.data[0] === 0 && a.data[1] === 0;\n  }\n  return false;\n}\nfunction isStrictlySmaller64Internal(a, b) {\n  return a[0] < b[0] || a[0] === b[0] && a[1] < b[1];\n}\nexport function isStrictlySmaller64(a, b) {\n  if (a.sign === b.sign) {\n    return a.sign === 1 ? isStrictlySmaller64Internal(a.data, b.data) : isStrictlySmaller64Internal(b.data, a.data);\n  }\n  return a.sign === -1 && (!isZero64(a) || !isZero64(b));\n}\nexport function clone64(a) {\n  return {\n    sign: a.sign,\n    data: [a.data[0], a.data[1]]\n  };\n}\nfunction substract64DataInternal(a, b) {\n  let reminderLow = 0;\n  let low = a[1] - b[1];\n  if (low < 0) {\n    reminderLow = 1;\n    low = low >>> 0;\n  }\n  return [a[0] - b[0] - reminderLow, low];\n}\nfunction substract64Internal(a, b) {\n  if (a.sign === 1 && b.sign === -1) {\n    const low = a.data[1] + b.data[1];\n    const high = a.data[0] + b.data[0] + (low > 0xffffffff ? 1 : 0);\n    return {\n      sign: 1,\n      data: [high >>> 0, low >>> 0]\n    };\n  }\n  return {\n    sign: 1,\n    data: a.sign === 1 ? substract64DataInternal(a.data, b.data) : substract64DataInternal(b.data, a.data)\n  };\n}\nexport function substract64(arrayIntA, arrayIntB) {\n  if (isStrictlySmaller64(arrayIntA, arrayIntB)) {\n    const out = substract64Internal(arrayIntB, arrayIntA);\n    out.sign = -1;\n    return out;\n  }\n  return substract64Internal(arrayIntA, arrayIntB);\n}\nexport function negative64(arrayIntA) {\n  return {\n    sign: -arrayIntA.sign,\n    data: [arrayIntA.data[0], arrayIntA.data[1]]\n  };\n}\nexport function add64(arrayIntA, arrayIntB) {\n  if (isZero64(arrayIntB)) {\n    if (isZero64(arrayIntA)) {\n      return clone64(Zero64);\n    }\n    return clone64(arrayIntA);\n  }\n  return substract64(arrayIntA, negative64(arrayIntB));\n}\nexport function halve64(a) {\n  return {\n    sign: a.sign,\n    data: [Math.floor(a.data[0] / 2), (a.data[0] % 2 === 1 ? 0x80000000 : 0) + Math.floor(a.data[1] / 2)]\n  };\n}\nexport function logLike64(a) {\n  return {\n    sign: a.sign,\n    data: [0, Math.floor(Math.log(a.data[0] * 0x100000000 + a.data[1]) / Math.log(2))]\n  };\n}","map":{"version":3,"names":["Zero64","sign","data","Unit64","isZero64","a","isStrictlyNegative64","isStrictlyPositive64","isEqual64","b","isStrictlySmaller64Internal","isStrictlySmaller64","clone64","substract64DataInternal","reminderLow","low","substract64Internal","high","substract64","arrayIntA","arrayIntB","out","negative64","add64","halve64","Math","floor","logLike64","log"],"sources":["C:/Users/ankit/Desktop/FUND/funding/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ArrayInt64.js"],"sourcesContent":["export const Zero64 = { sign: 1, data: [0, 0] };\nexport const Unit64 = { sign: 1, data: [0, 1] };\nexport function isZero64(a) {\n    return a.data[0] === 0 && a.data[1] === 0;\n}\nexport function isStrictlyNegative64(a) {\n    return a.sign === -1 && !isZero64(a);\n}\nexport function isStrictlyPositive64(a) {\n    return a.sign === 1 && !isZero64(a);\n}\nexport function isEqual64(a, b) {\n    if (a.data[0] === b.data[0] && a.data[1] === b.data[1]) {\n        return a.sign === b.sign || (a.data[0] === 0 && a.data[1] === 0);\n    }\n    return false;\n}\nfunction isStrictlySmaller64Internal(a, b) {\n    return a[0] < b[0] || (a[0] === b[0] && a[1] < b[1]);\n}\nexport function isStrictlySmaller64(a, b) {\n    if (a.sign === b.sign) {\n        return a.sign === 1\n            ? isStrictlySmaller64Internal(a.data, b.data)\n            : isStrictlySmaller64Internal(b.data, a.data);\n    }\n    return a.sign === -1 && (!isZero64(a) || !isZero64(b));\n}\nexport function clone64(a) {\n    return { sign: a.sign, data: [a.data[0], a.data[1]] };\n}\nfunction substract64DataInternal(a, b) {\n    let reminderLow = 0;\n    let low = a[1] - b[1];\n    if (low < 0) {\n        reminderLow = 1;\n        low = low >>> 0;\n    }\n    return [a[0] - b[0] - reminderLow, low];\n}\nfunction substract64Internal(a, b) {\n    if (a.sign === 1 && b.sign === -1) {\n        const low = a.data[1] + b.data[1];\n        const high = a.data[0] + b.data[0] + (low > 0xffffffff ? 1 : 0);\n        return { sign: 1, data: [high >>> 0, low >>> 0] };\n    }\n    return {\n        sign: 1,\n        data: a.sign === 1 ? substract64DataInternal(a.data, b.data) : substract64DataInternal(b.data, a.data),\n    };\n}\nexport function substract64(arrayIntA, arrayIntB) {\n    if (isStrictlySmaller64(arrayIntA, arrayIntB)) {\n        const out = substract64Internal(arrayIntB, arrayIntA);\n        out.sign = -1;\n        return out;\n    }\n    return substract64Internal(arrayIntA, arrayIntB);\n}\nexport function negative64(arrayIntA) {\n    return {\n        sign: -arrayIntA.sign,\n        data: [arrayIntA.data[0], arrayIntA.data[1]],\n    };\n}\nexport function add64(arrayIntA, arrayIntB) {\n    if (isZero64(arrayIntB)) {\n        if (isZero64(arrayIntA)) {\n            return clone64(Zero64);\n        }\n        return clone64(arrayIntA);\n    }\n    return substract64(arrayIntA, negative64(arrayIntB));\n}\nexport function halve64(a) {\n    return {\n        sign: a.sign,\n        data: [Math.floor(a.data[0] / 2), (a.data[0] % 2 === 1 ? 0x80000000 : 0) + Math.floor(a.data[1] / 2)],\n    };\n}\nexport function logLike64(a) {\n    return {\n        sign: a.sign,\n        data: [0, Math.floor(Math.log(a.data[0] * 0x100000000 + a.data[1]) / Math.log(2))],\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}